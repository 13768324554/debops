---

- name: Create global webroot directories if allowed
  file:
    path: '/srv/www/sites/{{ item.name[0] | default("default") }}/public'
    state: 'directory'
    owner: '{{ nginx_webroot_owner }}'
    group: '{{ nginx_webroot_group }}'
    mode: '{{ nginx_webroot_mode }}'
  with_items: [ '{{ nginx_servers }}' ]
  when: ((nginx_webroot_create is defined and nginx_webroot_create) and
         (item.name is defined) and
         (item.root is undefined and item.owner is undefined and item.group is undefined))

- name: Remove nginx server configuration if requested
  file:
    path: '/etc/nginx/sites-available/{{ item.name[0] | default("default") }}.conf'
    state: 'absent'
  with_items: [ '{{ nginx_servers }}' ]
  notify: [ 'Test nginx and reload' ]
  when: ((item.locked is undefined or (item.locked is defined and not item.locked)) and
         (item.name is defined) and (item.delete is defined and item.delete))


- name: Generate nginx server configuration
  template:
    src: 'etc/nginx/sites-available/{{ item.type | default(nginx_default_type) }}.conf.j2'
    dest: '/etc/nginx/sites-available/{{ item.name[0] | default("default") }}.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_items: [ '{{ nginx_servers }}' ]
  notify: [ 'Test nginx and reload' ]
  when: ((item.locked is undefined or (item.locked is defined and not item.locked)) and
         (item.name is defined) and (item.delete is undefined or (item.delete is defined and not item.delete)))

- name: Enable nginx server configuration
  file:
    path: '/etc/nginx/sites-enabled/{{ item.name[0] | default("default") }}.conf'
    src: '/etc/nginx/sites-available/{{ item.name[0] | default("default") }}.conf'
    state: 'link'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_items: [ '{{ nginx_servers }}' ]
  notify: [ 'Test nginx and reload' ]
  when: ((item.enabled is undefined or (item.enabled is defined and item.enabled)) and
         (item.name is defined) and (item.delete is undefined or (item.delete is defined and not item.delete)))

- name: Disable nginx server configuration
  file:
    path: '/etc/nginx/sites-enabled/{{ item.name[0] | default("default") }}.conf'
    state: 'absent'
  with_items: [ '{{ nginx_servers }}' ]
  notify: [ 'Test nginx and reload' ]
  when: (((item.enabled is defined and not item.enabled) and (item.name is defined)) or
        (item.delete is defined and item.delete))

