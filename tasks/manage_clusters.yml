---

- name: Check if shared memory support is available
  shell: mount | grep /dev/shm || true
  register: postgresql_server_register_shm
  changed_when: False

- name: Create PostgreSQL clusters
  environment:
    LANG: '{{ item.locale | default(postgresql_server_locale) }}'
    LC_ALL: '{{ item.locale | default(postgresql_server_locale) }}'
  command: pg_createcluster --user={{ item.user | default(postgresql_server_user) }}
           --group={{ item.group | default(postgresql_server_group) }}
           --locale={{ item.locale | default(postgresql_server_locale) }}
           --start-conf={{ item.start_conf | default(postgresql_default_start_conf) }}
           --port={{ item.port }} {{ item.version | default(postgresql_server_version) }} {{ item.name }}
           creates=/etc/postgresql/{{ item.version | default(postgresql_server_version) }}/{{ item.name }}/postgresql.conf
  with_flattened:
    - postgresql_default_cluster
    - postgresql_clusters
  when: item.name is defined and item.name and item.port is defined and item.port

- name: Configure PostgreSQL clusters
  template: src=etc/postgresql/postgresql.conf.j2
            dest=/etc/postgresql/{{ item.version | default(postgresql_server_version) }}/{{ item.name }}/postgresql.conf
            owner={{ item.user | default(postgresql_server_user) }} group={{ item.group | default(postgresql_server_group) }} mode=0644
  with_flattened:
    - postgresql_default_cluster
    - postgresql_clusters
  when: item.name is defined and item.name
  register: postgresql_config

- name: Configure PostgreSQL cluster environment
  template: src=etc/postgresql/environment.j2
            dest=/etc/postgresql/{{ item.version | default(postgresql_server_version) }}/{{ item.name }}/environment
            owner={{ item.user | default(postgresql_server_user) }} group={{ item.group | default(postgresql_server_group) }} mode=0644
  with_flattened:
    - postgresql_default_cluster
    - postgresql_clusters
  when: item.name is defined and item.name
  register: postgresql_config_environment

- name: Configure PostgreSQL system-wide user to cluster mapping
  template: src=etc/postgresql-common/user_clusters.j2
            dest=/etc/postgresql-common/user_clusters
            owner=root group=root mode=0644

- name: Configure PostgreSQL user identification
  template: src=etc/postgresql/pg_ident.conf.j2
            dest=/etc/postgresql/{{ item.version | default(postgresql_server_version) }}/{{ item.name }}/pg_ident.conf
            owner={{ item.user | default(postgresql_server_user) }} group={{ item.group | default(postgresql_server_group) }} mode=0640
  with_flattened:
    - postgresql_default_cluster
    - postgresql_clusters
  when: item.name is defined and item.name
  register: postgresql_config_ident

- name: Configure PostgreSQL cluster host authentication
  template: src=etc/postgresql/pg_hba.conf.j2
            dest=/etc/postgresql/{{ item.version | default(postgresql_server_version) }}/{{ item.name }}/pg_hba.conf
            owner={{ item.user | default(postgresql_server_user) }} group={{ item.group | default(postgresql_server_group) }} mode=0640
  with_flattened:
    - postgresql_default_cluster
    - postgresql_clusters
  when: item.name is defined and item.name
  register: postgresql_config_hba

- name: Configure PostgreSQL cluster start options
  template: src=etc/postgresql/start.conf.j2
            dest=/etc/postgresql/{{ item.version | default(postgresql_server_version) }}/{{ item.name }}/start.conf
            owner={{ item.user | default(postgresql_server_user) }} group={{ item.group | default(postgresql_server_group) }} mode=0644
  with_flattened:
    - postgresql_default_cluster
    - postgresql_clusters
  when: item.name is defined and item.name
  register: postgresql_config_start

- name: Symlink SSL root certificate
  file:
    src: '{{ item.pki_path | d(postgresql_server_pki_path) + "/" + item.pki_realm | d(postgresql_server_pki_realm) + "/" + item.pki_ca | d(postgresql_server_pki_ca) }}'
    dest: '{{ (item.data_directory | d("/var/lib/postgresql/" + (item.version | d(postgresql_server_version)) + "/" + item.name)) + "/root.crt" }}'
    state: 'link'
  with_flattened:
    - postgresql_default_cluster
    - postgresql_clusters
  when: ((postgresql_server_pki|d() and postgresql_server_pki | bool) and
         (item.name|d() and item.name) and
         ((item.version|d() and item.version == '9.1') or
          (postgresql_server_version|d() and postgresql_server_version == '9.1')))

- name: Symlink SSL certificate
  file:
    src: '{{ item.pki_path | d(postgresql_server_pki_path) + "/" + item.pki_realm | d(postgresql_server_pki_realm) + "/" + item.pki_crt | d(postgresql_server_pki_crt) }}'
    dest: '{{ (item.data_directory | d("/var/lib/postgresql/" + (item.version | d(postgresql_server_version)) + "/" + item.name)) + "/server.crt" }}'
    state: 'link'
  with_flattened:
    - postgresql_default_cluster
    - postgresql_clusters
  when: ((postgresql_server_pki|d() and postgresql_server_pki | bool) and
         (item.name|d() and item.name) and
         ((item.version|d() and item.version == '9.1') or
          (postgresql_server_version|d() and postgresql_server_version == '9.1')))

- name: Symlink SSL key
  file:
    src: '{{ item.pki_path | d(postgresql_server_pki_path) + "/" + item.pki_realm | d(postgresql_server_pki_realm) + "/" + item.pki_key | d(postgresql_server_pki_key) }}'
    dest: '{{ (item.data_directory | d("/var/lib/postgresql/" + (item.version | d(postgresql_server_version)) + "/" + item.name)) + "/server.key" }}'
    state: 'link'
  with_flattened:
    - postgresql_default_cluster
    - postgresql_clusters
  when: ((postgresql_server_pki|d() and postgresql_server_pki | bool) and
         (item.name|d() and item.name) and
         ((item.version|d() and item.version == '9.1') or
          (postgresql_server_version|d() and postgresql_server_version == '9.1')))

- name: Start PostgreSQL clusters when not started
  command: pg_ctlcluster {{ item.version | default(postgresql_server_version) }} {{ item.name }} start
           creates={{ item.external_pid_file | default("/var/run/postgresql/" + (item.version | default(postgresql_server_version)) + "-" + item.name + ".pid") }}
  with_flattened:
    - postgresql_default_cluster
    - postgresql_clusters
  when: (item.name is defined and item.name) and
        (item.start_conf is undefined or item.start_conf is defined and item.start_conf == 'auto')

- name: Reload PostgreSQL clusters when needed
  command: pg_ctlcluster {{ item.item.version | default(postgresql_server_version) }} {{ item.item.name }} reload
  with_flattened:
    - postgresql_config.results
    - postgresql_config_hba.results
    - postgresql_config_ident.results
  when: (item.changed is defined and item.changed) and
        (item.item.start_conf is undefined or item.item.start_conf is defined and item.item.start_conf == 'auto')

