---
# vim: foldmarker=[[[,]]]:foldmethod=marker

- name: Create Nextcloud group
  group:
    name: '{{ nextcloud__system_group }}'
    state: 'present'
    system: True
  tags: [ 'role::nextcloud:download', 'role::nextcloud:verify' ]

- name: Create Nextcloud user
  user:
    name: '{{ nextcloud__system_user }}'
    group: '{{ nextcloud__system_group }}'
    home: '{{ nextcloud__system_home }}'
    comment: '{{ nextcloud__comment }}'
    shell: '{{ nextcloud__shell }}'
    system: True
    state: 'present'
  tags: [ 'role::nextcloud:download', 'role::nextcloud:verify' ]

- name: Create source directory
  file:
    path: '{{ nextcloud__src }}'
    state: 'directory'
    owner: '{{ nextcloud__system_user }}'
    group: '{{ nextcloud__system_group }}'
    mode: '0755'

- name: Create deployment directory
  file:
    path: '{{ owncloud__deploy_path }}'
    state: 'directory'
    owner: '{{ owncloud__app_user }}'
    group: '{{ owncloud__app_group }}'
    mode: '0750'


# OpenPGP keys, application download and validation [[[1

- become: True
  become_user: '{{ nextcloud__system_user }}'
  block:

    # OpenPGP key management [[[2

    - name: Ensure user GnuPG directory exists
      file:
        path: '{{ nextcloud__system_home + "/.gnupg" }}'
        state: 'directory'
        mode: '0700'

    - name: Ensure the Nextcloud OpenPGP key is present
      apt_key:
        id: '{{ nextcloud__upstream_key_fingerprint | replace(" ","") }}'
        keyring: '{{ nextcloud__system_home + "/.gnupg/pubring.gpg" }}'
        keyserver: '{{ nextcloud__keyserver }}'
        state: 'present'

    # Get lastest patch version for release [[[2

    - name: Query for the full version string of the current release
      shell: curl -s -m 900 {{ (owncloud__variant_download_url_map[owncloud__variant] + "/") | quote }} | sed --silent 's/.*href="nextcloud-\({{ owncloud__release | regex_escape() }}[^"]\+\).zip.asc".*/\1/p' | sort --version-sort --reverse
      args:
        warn: False
      register: nextcloud__register_full_version
      changed_when: False
      tags: [ 'role::nextcloud:verify' ]

    # Nextcloud application archive download [[[2

    - name: Create source directories
      file:
        path: '{{ nextcloud__src + "/" + owncloud__variant + "/" + nextcloud__register_full_version.stdout_lines[0] }}'
        state: 'directory'
        owner: '{{ nextcloud__system_user }}'
        group: '{{ nextcloud__system_group }}'
        mode: '0755'
      tags: [ 'role::nextcloud:download', 'role::nextcloud:verify' ]

    - name: Download application files needed for verification
      get_url:
        url: '{{ owncloud__variant_download_url_map[owncloud__variant] + "/" +
                 owncloud__variant + "-" + nextcloud__register_full_version.stdout_lines[0] + "." + item }}'
        dest: '{{ nextcloud__src + "/" + owncloud__variant + "/" + nextcloud__register_full_version.stdout_lines[0] }}'
      with_items:
        - 'zip.asc'
        - 'zip.sha512'
      register: nextcloud__register_download_assurance
      tags: [ 'role::nextcloud:download', 'role::nextcloud:verify' ]

    # Nextcloud application archive authenticity verification [[[2

    - name: Read checksum from file
      shell: cat {{ nextcloud__src + "/" + owncloud__variant + "/" + nextcloud__register_full_version.stdout_lines[0] + "/" +
                    owncloud__variant + "-" + nextcloud__register_full_version.stdout_lines[0] + ".zip.sha512" }} | grep '.zip$'
      changed_when: False
      register: nextcloud__register_checksum
      tags: [ 'role::nextcloud:download', 'role::nextcloud:verify' ]

    - name: Download application archive
      get_url:
        url: '{{ owncloud__variant_download_url_map[owncloud__variant] + "/" +
                 owncloud__variant + "-" + nextcloud__register_full_version.stdout_lines[0] + ".zip" }}'
        dest: '{{ nextcloud__src + "/" + owncloud__variant + "/" + nextcloud__register_full_version.stdout_lines[0] }}'
        checksum: 'sha512:{{ (nextcloud__register_checksum.stdout_lines[0]).split(" ") | first }}'
      when: nextcloud__register_download_assurance|changed
      tags: [ 'role::nextcloud:download', 'role::nextcloud:verify' ]

    - name: Verify OpenPGP signature
      shell: |
          gpg --verify {{ nextcloud__src + "/" + owncloud__variant + "/" + nextcloud__register_full_version.stdout_lines[0] + "/" +
                          owncloud__variant + "-" + nextcloud__register_full_version.stdout_lines[0] + ".zip.asc" }} \
                       {{ nextcloud__src + "/" + owncloud__variant + "/" + nextcloud__register_full_version.stdout_lines[0] + "/" +
                          owncloud__variant + "-" + nextcloud__register_full_version.stdout_lines[0] + ".zip" }} 2>&1 \
            | sed --silent 's/^Primary key fingerprint: \(.*\)$/\1/p;'
      changed_when: False
      register: nextcloud__register_verify_authenticity
      failed_when: (nextcloud__register_verify_authenticity.rc != 0 or
                    (nextcloud__register_verify_authenticity.stdout|replace(" ","")) != (nextcloud__upstream_key_fingerprint|replace(" ","")))
      tags: [ 'role::nextcloud:verify' ]

- name: Unpack the application archive
  unarchive:
    remote_src: True
    src: '{{ nextcloud__src + "/" + owncloud__variant + "/" + nextcloud__register_full_version.stdout_lines[0] + "/" +
             owncloud__variant + "-" + nextcloud__register_full_version.stdout_lines[0] + ".zip" }}'
    dest: '{{ owncloud__deploy_path + "/.." }}'
    owner: '{{ owncloud__app_user }}'
    group: '{{ owncloud__app_group }}'
    creates: '{{ owncloud__deploy_path + "/index.php" }}'
  become: True
  become_user: '{{ owncloud__app_user }}'
