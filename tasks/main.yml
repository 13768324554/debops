---

- name: Get current timezone from the host
  slurp:
    src: '/etc/timezone'
  register: php__etc_timezone

- name: Add Ondrej Sury APT key
  apt_key:
    id: '{{ php__sury_apt_key_id }}'
    state: 'present'
    keyserver: '{{ ansible_local.core.keyserver
                   if (ansible_local|d() and ansible_local.core|d() and
                       ansible_local.core.keyserver)
                   else "hkp://pool.sks-keyservers.net" }}'
  when: php__sury|bool

- name: Add Ondrej Sury repository
  apt_repository:
    repo: '{{ php__sury_apt_repo }}'
    state: 'present'
    update_cache: True
  when: php__sury|bool

- name: Detect PHP version from available packages
  environment:
    LANG: 'C'
  shell: apt-cache show {{ php__version_preference | join(' ') }} | grep -E '^Package:\s+php' | head -n 1 | awk '{print $2}' | sed -e 's/^php//'
  register: php__register_version
  always_run: True
  changed_when: False

- name: Set PHP version
  set_fact:
    php__version: '{{ ansible_local.php.version
                      if (ansible_local|d() and ansible_local.php|d() and
                          ansible_local.php.version|d())
                      else php__register_version.stdout }}'

- name: Set PHP base paths
  set_fact:
    php__etc_base: '{{ ("/etc/php/" + php__version)
                       if (php__version | version_compare("7.0", ">="))
                       else "/etc/php5" }}'
    php__lib_base: '{{ ("/usr/lib/php/" + php__version)
                       if (php__version | version_compare("7.0", ">="))
                       else "/usr/lib/php5" }}'

- name: Install PHP packages
  apt:
    name: '{{ item|search("php.*-")|ternary(item, "php" + php__version + "-" + item) }}'
    state: 'present'
    install_recommends: False
  with_flattened:
    - '{{ php__server_api_packages }}'
    - '{{ php__base_packages }}'
    - '{{ php__packages }}'
    - '{{ php__group_packages }}'
    - '{{ php__host_packages }}'
    - '{{ php__dependent_packages }}'
  notify: [ 'Restart php-fpm' ]

- name: "Create directory for php*-fpm logs"
  file:
    path: '/var/log/php{{ php__version }}-fpm'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0700'
  when: '"fpm" in php__server_api_packages'

- name: "Check existence of php-fpm-reopenlogs"
  stat:
    path: '{{ php__lib_base }}/php{{ php__version }}-fpm-reopenlogs'
  register: php__register_reopenlogs

- name: "Configure logrotate for php-fpm"
  template:
    src: 'etc/logrotate.d/php-fpm.j2'
    dest: '/etc/logrotate.d/php{{ php__version }}-fpm'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: '"fpm" in php__server_api_packages'

- name: Ensure that required directories exist
  file:
    path: '{{ php__etc_base }}/fpm/pool.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  when: '"fpm" in php__server_api_packages'

- name: "Configure php.ini for php-fpm"
  template:
    src: 'etc/php/php.ini.j2'
    dest: '{{ php__etc_base }}/fpm/php.ini'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: "Restart php-fpm"
  when: '"fpm" in php__server_api_packages'

- name: "Configure php.ini for CLI"
  template:
    src: 'etc/php/php.ini.j2'
    dest: '{{ php__etc_base }}/cli/php.ini'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: Divert default PHP-FPM pool
  command: dpkg-divert --quiet --local --divert {{ php__etc_base }}/fpm/pool.d/www.conf.dpkg-divert
           --rename {{ php__etc_base }}/fpm/pool.d/www.conf
  args:
    creates: '{{ php__etc_base }}/fpm/pool.d/www.conf.dpkg-divert'
  notify: [ 'Restart php-fpm' ]
  when: '"fpm" in php__server_api_packages'

- name: Generate php-fpm pool configuration
  template:
    src: 'etc/php/fpm/pool.d/pool.conf.j2'
    dest: '{{ php__etc_base }}/fpm/pool.d/{{ item.name }}.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_flattened:
    - '{{ php__default_pools }}'
    - '{{ php__pools }}'
    - '{{ php__group_pools }}'
    - '{{ php__host_pools }}'
    - '{{ php__dependent_pools }}'
  when: '"fpm" in php__server_api_packages and item.state|d("present") != "absent"'
  notify: [ 'Restart php-fpm' ]

- name: Remove php-fpm pool configuration if requested
  file:
    dest: '{{ php__etc_base }}/fpm/pool.d/{{ item.name }}.conf'
    state: 'absent'
  with_flattened:
    - '{{ php__default_pools }}'
    - '{{ php__pools }}'
    - '{{ php__group_pools }}'
    - '{{ php__host_pools }}'
    - '{{ php__dependent_pools }}'
  when: '"fpm" in php__server_api_packages and item.state|d() and item.state == "absent"'
  notify: [ 'Restart php-fpm' ]

- name: Make sure that Ansible local facts directory is present
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save PHP-FPM local facts
  template:
    src: 'etc/ansible/facts.d/php.fact.j2'
    dest: '/etc/ansible/facts.d/php.fact'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: php__register_local_facts

- name: Gather facts if they were modified
  action: setup
  when: php__register_local_facts.changed

