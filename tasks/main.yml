---

- name: Combine lists of kernel module
  set_fact:
    kernel_module_list_combined: '{{ kernel_module_list + kernel_module_group_list + kernel_module_host_list | default([]) }}'

- name: Blacklist kernel modules
  kernel_blacklist:
    name: '{{ item.name }}'
    state: '{{ "present" if (item.blacklist|d() | bool) else "absent" }}'
    blacklist_file: '{{ kernel_module_blacklist_file }}'
  with_items: kernel_module_list_combined

- name: Save kernel modules which should be loaded on boot
  template:
    src: 'etc/modules-load.d/ansible-kernel_module-role.conf.j2'
    dest: '{{ kernel_module_load_file }}'
  # when: kernel_module_list_combined
  # Don’t use when because modules should be removed from the file if missing in the Ansible configuration …

- name: Save kernel module parameters
  template:
    src: 'etc/modprobe.d/options-ansible-kernel_module-role.conf.j2'
    dest: '{{ kernel_module_options_file }}'
  register: kernel_module_options_template
  # when: '"parms" in kernel_module_list_combined'
  # Don’t use when because parameters should be removed from the file if missing in the Ansible configuration …

## See http://unix.stackexchange.com/a/123050
- name: Force module unload to apply different module parameters or if blacklisted
  modprobe:
    name: '{{ item.name }}'
    state: 'absent'
  when: (
          item.blacklist|d(False) or
          (
            (
              not (item.persistent|d(True) | bool) or
              kernel_module_options_template|changed
            ) and
            item.state|d('present') == 'present' and
            (item.params_force|d(kernel_module_params_force|d(False)) | bool) and
            not (item.blacklist|d(False) | bool)
          )
        )
  with_items: kernel_module_list_combined

- name: Modprobe kernel modules
  modprobe:
    name: '{{ item.name }}'
    params: '{{ item.params | default(omit) }}'
    state: '{{ item.state }}'
  when: (
          item.state is defined and
          not (item.blacklist|d(False) | bool)
        )
  with_items: kernel_module_list_combined
