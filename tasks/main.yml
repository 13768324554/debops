---

- name: Install required packages
  apt:
    name: '{{ item }}'
    state: 'present'
    install_recommends: False
  with_flattened:
    - '{{ foodsoft_base_packages }}'

- name: Create Foodsoft system group
  group:
    name: '{{ foodsoft_group }}'
    system: True
    state: 'present'

- name: Create Foodsoft user
  user:
    name: '{{ foodsoft_user }}'
    group: '{{ foodsoft_group }}'
    home: '{{ foodsoft_home }}'
    comment: 'Foodsoft'
    append: True
    system: True
    state: 'present'

- name: Clone Foodsoft source code from VCS
  git:
    repo: '{{ foodsoft_install_repo }}'
    dest: '{{ foodsoft_install_path }}'
    version: '{{ foodsoft_install_version }}'
    update: True
  become: True
  become_user: '{{ foodsoft_user }}'
  tags: [ 'role::foodsoft:source' ]

- name: Update Foodsoft directory permissions
  file:
    path: '{{ item }}'
    state: 'directory'
    owner: '{{ foodsoft_user }}'
    group: '{{ foodsoft_webserver_user }}'
    mode: '0750'
  with_items:
    - '{{ foodsoft_home }}'
    - '{{ foodsoft_home }}/sites'
    - '{{ foodsoft_install_path }}'

## Todo install as user: https://stackoverflow.com/questions/16031061/force-bundler-to-install-gems-in-user-s-home-directory

- name: Install Foodsoft dependencies via bundler
  ## Ansible 2.0
  # bundler:
    # chdir: '{{ foodsoft_install_path }}'
    # exclude_groups: '{{ foodsoft_bundler_exclude_groups }}'
    # # gem_path: ''
  command: bundler install --without {{ foodsoft_bundler_exclude_groups | join(" ") }}
  # command: bundler install --without '{{ foodsoft_bundler_exclude_groups | join(" ") }}' --with 'test development'
  args:
    chdir: '{{ foodsoft_install_path }}'
  tags: [ 'role::foodsoft:gems' ]
  when: foodsoft_bundler_exclude_groups|d()

## https://github.com/foodcoops/foodsoft/blob/master/doc/SETUP_DEVELOPMENT.md#manual-configuration
- name: Configure Foodsoft
  template:
    src: 'srv/www/foodsoft/sites/public/config/{{ item }}.j2'
    dest: '{{ foodsoft_install_path }}/config/{{ item }}'
    owner: '{{ foodsoft_user }}'
    group: '{{ foodsoft_group }}'
    mode: '0640'
  tags: [ 'role::foodsoft:config' ]
  with_items:
    - 'database.yml'
    - 'app_config.yml'

## Workaround because there is not a single command for this: https://github.com/foodcoops/foodsoft/issues/385
- name: Generate secret token
  command: 'bundler exec rake secret'
  args:
    chdir: '{{ foodsoft_install_path }}'
    creates: '{{ foodsoft_install_path }}/config/initializers/secret_token.rb'
  register: foodsoft_secret_token
  become_user: '{{ foodsoft_user }}'
  tags: [ 'role::foodsoft:gen_token' ]

- name: Check secret token
  ## Default is 128
  assert:
    that:
      - 'foodsoft_secret_token.stdout|length > 120'
      - 'foodsoft_secret_token.stdout|length < 500'
  when: foodsoft_secret_token|changed
  tags: [ 'role::foodsoft:gen_token' ]

- name: Configure secret token for Foodsoft
  template:
    src: 'srv/www/foodsoft/sites/public/config/{{ item }}.j2'
    dest: '{{ foodsoft_install_path }}/config/{{ item }}'
    owner: '{{ foodsoft_user }}'
    group: '{{ foodsoft_group }}'
    mode: '0640'
  tags: [ 'role::foodsoft:gen_token' ]
  when: foodsoft_secret_token|changed
  with_items:
    - 'initializers/secret_token.rb'

- name: Create database schema and load defaults
  command: 'bundler exec rake db:setup'
  args:
    chdir: '{{ foodsoft_install_path }}'
  become_user: '{{ foodsoft_user }}'

## Maybe only needed for https://github.com/foodcoop-adam/foodsoft
# - name: Setup admin user
  # command: 'rake db:seed'
  # args:
    # chdir: '{{ foodsoft_install_path }}'
  # become_user: '{{ foodsoft_user }}'


## Todo: (optional) Get background jobs done
