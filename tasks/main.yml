---

- name: Check Ansible Controller library version
  shell: |
    {% if dhparam_source_library == 'gnutls' %}
    certtool --version | head -n 1 | awk '{print $NF}'
    {% elif dhparam_source_library == 'openssl' %}
    openssl version | awk '{print $2}'
    {% endif %}
  changed_when: False
  register: dhparam_register_version
  delegate_to: 'localhost'
  become: False
  run_once: True
  always_run: True

- name: Assert that required software is installed
  assert:
    that:
      - 'dhparam_register_version is defined and dhparam_register_version.stdout'
  delegate_to: 'localhost'
  become: False
  run_once: True

- name: Create required directories on Ansible Controller
  file:
    path: '{{ dhparam_source_path }}'
    state: 'directory'
  delegate_to: 'localhost'
  become: False
  run_once: True

- name: Generate Diffie-Hellman params on Ansible Controller
  command: |
    {% if dhparam_source_library == 'gnutls' %}
    certtool --generate-dh-params --outfile {{ dhparam_source_path + "/" + dhparam_prefix + item + dhparam_suffix }} --bits {{ item }}
    {% elif dhparam_source_library == 'openssl' %}
    openssl dhparam -out {{ dhparam_source_path + "/" + dhparam_prefix + item + dhparam_suffix }} {{ item }}
    {% endif %}
  args:
    creates: '{{ dhparam_source_path + "/" + dhparam_prefix + item + dhparam_suffix }}'
  with_items: '{{ dhparam_bits }}'
  delegate_to: 'localhost'
  become: False
  run_once: True

- name: Install encryption software
  apt:
    name: '{{ item }}'
    state: 'present'
    install_recommends: False
  with_flattened:
    - '{{ dhparam_base_packages }}'
    - '{{ dhparam_packages }}'

- name: Create required directories
  file:
    path: '{{ dhparam_hook_path }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  notify: [ 'Regenerate DH parameters on first install' ]

- name: Preseed Diffie-Hellman parameters
  copy:
    src: '{{ dhparam_source_path + "/" }}'
    dest: '{{ dhparam_path + "/params/" + dhparam_set_prefix + item + "/" }}'
    owner: 'root'
    group: 'root'
    force: False
  with_sequence: 'start=0 count={{ dhparam_sets }}'
  notify: [ 'Execute DH parameter hooks' ]

- name: Create default symlinks for all sets
  file:
    src: '{{ "params/" + dhparam_set_prefix + item + "/" + dhparam_prefix + dhparam_default_length + dhparam_suffix }}'
    path: '{{ dhparam_path + "/" + dhparam_set_prefix + item }}'
    state: 'link'
  with_sequence: 'start=0 count={{ dhparam_sets }}'

- name: Install DHE generation script
  template:
    src: 'usr/local/lib/dhparam-generate-params.j2'
    dest: '{{ dhparam_generate_params }}'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Enable periodic DH parameters generation
  cron:
    name: 'Generate new Diffie-Hellman ephemeral parameters'
    job: 'test -x {{ dhparam_generate_params }} && {{ dhparam_generate_params }} schedule'
    cron_file: 'dhparam-generate-params'
    user: 'root'
    special_time: '{{ dhparam_generate_cron_period }}'
    state: '{{ "present" if dhparam_generate_cron|bool else "absent" }}'

- name: Make sure the Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save dhparam local facts
  template:
    src: 'etc/ansible/facts.d/dhparam.fact.j2'
    dest: '/etc/ansible/facts.d/dhparam.fact'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: dhparam_register_facts

- name: Gather facts if they changed
  action: setup
  when: dhparam_register_facts.changed

