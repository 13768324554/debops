---

- name: Install required packages
  package:
    name: '{{ item }}'
    state: 'present'
  with_flattened:
    - '{{ ifupdown__base_packages }}'
    - '{{ ifupdown__dynamic_packages if ifupdown__dynamic_packages else [] }}'
    - '{{ ifupdown__packages }}'

- name: Create custom ifupdown systemd services
  include: ifup_systemd.yml

- name: Reset network configuration on role upgrade
  file:
    path: '/etc/network/interfaces.config.d'
    state: 'absent'
  when: (ansible_local|d() and ansible_local.debops_fact|d() and
         ansible_local.debops_fact.enabled|bool and
         (ansible_local.debops_fact.version is undefined or
          (ansible_local.debops_fact.version.ifupdown is undefined or
           (ansible_local.debops_fact.version.ifupdown
            | version_compare("0.3.0","<")))))

- name: Create configuration directories
  file:
    path:   '{{ item }}'
    state:  'directory'
    owner:  'root'
    group:  'root'
    mode:   '0755'
  with_items:
    - '/etc/network/interfaces.d'
    - '/etc/network/interfaces.config.d'

- name: Preserve original network configuration
  include: divert_interfaces.yml

- name: Remove network interface configuration
  file:
    dest: '/etc/network/interfaces.config.d/{{ item.value.weight | d(ifupdown__interface_weight_map[item.value.type | d("default")] | d("99")) }}_iface_{{ item.value.iface | d(item.key) }}'
    state: 'absent'
  with_dict: '{{ ifupdown__combined_interfaces }}'
  register: ifupdown__register_interfaces_removed
  when: item.value.state|d('present') == 'absent'

- name: Generate network interface configuration
  template:
    src: 'etc/network/interfaces.d/iface.j2'
    dest: '/etc/network/interfaces.config.d/{{ item.value.weight | d(ifupdown__interface_weight_map[item.value.type | d("default")] | d("99")) }}_iface_{{ item.value.iface | d(item.key) }}'
    owner: 'root'
    group: 'root'
    mode: '{{ item.value.mode | d(0644) }}'
  with_dict: '{{ ifupdown__combined_interfaces }}'
  register: ifupdown__register_interfaces_created
  when: item.value.state|d('present') not in [ 'absent', 'ignore' ]

- name: Mark modified interfaces for processing
  copy:
    content: |
      {{ ("created"
          if ((item.item.key|replace(':','_')|replace('.','_')) not in ansible_interfaces and
              (item.diff is undefined or
               (item.diff|d() and item.diff.after|d() and
                item.diff.after_header|d() and
                item.diff.after_header == "dynamically generated")))
          else ("removed"
                if (item.diff|d() and item.diff.after|d() and
                    item.diff.after.state|d() and
                    item.diff.after.state == "absent")
                else "changed")) }}
    dest: '{{ "/run/network/debops-ifupdown-reconfigure," +
              (ifupdown__interface_weight_map[item.item.value.type]
               | d(ifupdown__interface_weight_map["default"] | d("99"))) +
               "," + item.item.key }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_items:
    - '{{ ifupdown__register_interfaces_removed.results }}'
    - '{{ ifupdown__register_interfaces_created.results }}'
  notify: [ 'Apply ifupdown configuration' ]
  when: (item.item.key|d() and item.changed|bool)

- name: Remove custom configuration files
  file:
    path:  '{{ item.dest | d(item.path) }}'
    state: 'absent'
  with_flattened:
    - '{{ ifupdown__custom_files }}'
    - '{{ ifupdown__custom_group_files }}'
    - '{{ ifupdown__custom_host_files }}'
    - '{{ ifupdown__custom_dependent_files }}'
  when: ((item.dest|d() or item.path|d()) and
         item.state|d('present') == 'absent')

- name: Generate custom configuration files
  copy:
    dest:    '{{ item.dest    | d(item.path) }}'
    src:     '{{ item.src     | d(omit) }}'
    content: '{{ item.content | d(omit) }}'
    owner:   '{{ item.owner   | d("root") }}'
    group:   '{{ item.group   | d("root") }}'
    mode:    '{{ item.mode    | d("0644") }}'
    force:   '{{ item.force   | d(omit) }}'
  with_flattened:
    - '{{ ifupdown__custom_files }}'
    - '{{ ifupdown__custom_group_files }}'
    - '{{ ifupdown__custom_host_files }}'
    - '{{ ifupdown__custom_dependent_files }}'
  when: ((item.dest|d() or item.path|d()) and
         (item.src|d() or item.content|d()) and
         item.state|d('present') != 'absent')

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save ifupdown local facts
  template:
    src: 'etc/ansible/facts.d/ifupdown.fact.j2'
    dest: '/etc/ansible/facts.d/ifupdown.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save role version information
  ini_file:
    dest: '{{ ansible_local.debops_fact.public_facts
              if (ansible_local|d() and ansible_local.debops_fact|d() and
                  ansible_local.debops_fact.public_facts|d())
              else "/etc/ansible/debops_fact.ini" }}'
    section: 'version'
    option: 'ifupdown'
    value: '{{ ifupdown__role_metadata.version }}'
  when: ansible_local|d() and ansible_local.debops_fact|d() and
        ansible_local.debops_fact.enabled|bool
