---

- name: Make sure that required UNIX group exists
  group:
    name: '{{ rabbitmq_server__group }}'
    state: 'present'
    system: True

- name: Make sure that required UNIX account exists
  user:
    name: '{{ rabbitmq_server__user }}'
    group: '{{ rabbitmq_server__group }}'
    home: '{{ rabbitmq_server__home }}'
    comment: 'RabbitMQ messaging server'
    password: '!'
    shell: '/bin/false'
    state: 'present'
    system: True

  # Without this, first Erlang cookie lookup on each host
  # returns different values.
- name: Initialize Erlang cookie on the Ansible Controller
  set_fact:
    rabbitmq_server__fact_erlang_cookie: '{{ rabbitmq_server__erlang_cookie_password }}'
  delegate_to: 'localhost'
  become: False
  run_once: True
  no_log: True

- name: Configure Erlang cookie
  copy:
    content: '{{ rabbitmq_server__erlang_cookie_password }}'
    dest: '{{ rabbitmq_server__erlang_cookie_path }}'
    owner: '{{ rabbitmq_server__user }}'
    group: '{{ rabbitmq_server__group }}'
    mode: '0400'
  notify: [ 'Restart rabbitmq-server' ]
  no_log: True

- name: Install RabbitMQ packages
  package:
    name: '{{ item }}'
    state: 'present'
  with_flattened:
    - '{{ rabbitmq_server__base_packages }}'
    - '{{ rabbitmq_server__packages }}'

- name: Check if the dependent config file exists
  stat:
    path: '{{ secret + "/rabbitmq_server/dependent_config/" + inventory_hostname + "/config.json" }}'
  register: rabbitmq_server__register_dependent_config_file
  become: False
  delegate_to: 'localhost'
  when: (ansible_local|d() and ansible_local.rabbitmq_server|d() and
         ansible_local.rabbitmq_server.installed is defined and
         ansible_local.rabbitmq_server.installed|bool)
  tags: [ 'role::rabbitmq_server:config' ]

- name: Load the dependent configuration from Ansible Controller
  slurp:
    src: '{{ secret + "/rabbitmq_server/dependent_config/" + inventory_hostname + "/config.json" }}'
  register: rabbitmq_server__register_dependent_config
  become: False
  delegate_to: 'localhost'
  when: (ansible_local|d() and ansible_local.rabbitmq_server|d() and
         ansible_local.rabbitmq_server.installed is defined and
         ansible_local.rabbitmq_server.installed|bool and
         rabbitmq_server__register_dependent_config_file.stat.exists|bool)
  tags: [ 'role::rabbitmq_server:config' ]

- name: Generate RabbitMQ configuration
  template:
    src: 'etc/rabbitmq/rabbitmq.config.j2'
    dest: '/etc/rabbitmq/rabbitmq.config'
    owner: '{{ rabbitmq_server__user }}'
    group: '{{ rabbitmq_server__group }}'
    mode: '0600'
  notify: [ 'Restart rabbitmq-server' ]
  tags: [ 'role::rabbitmq_server:config' ]

- name: Save RabbitMQ dependent configuration on Ansible Controller
  template:
    src: 'secret/rabbitmq_server/dependent_config/inventory_hostname/config.json.j2'
    dest: '{{ secret + "/rabbitmq_server/dependent_config/" + inventory_hostname + "/config.json" }}'
  become: False
  delegate_to: 'localhost'
  tags: [ 'role::rabbitmq_server:config' ]

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save RabbitMQ local facts
  template:
    src: 'etc/ansible/facts.d/rabbitmq_server.fact.j2'
    dest: '/etc/ansible/facts.d/rabbitmq_server.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  register: rabbitmq_server__register_facts

- name: Update Ansible facts if they were modified
  action: setup
  when: rabbitmq_server__register_facts|changed
