---

- name: Install snapper
  apt:
    name: "{{ item }}"
    state: "latest"
    install_recommends: False
  with_items:
    - snapper

- name: Divert original configuration under /etc
  command: dpkg-divert --quiet --local --divert {{ item }}.dpkg-divert --rename {{ item }}
  args:
    creates: "{{ item }}.dpkg-divert"
  register: updatedb_diverted
  when: (snapshot_snapper_snapshot_directory is defined
         and snapshot_snapper_snapshot_directory and ansible_distribution in [ 'Debian', 'Ubuntu' ]
        )
  with_flattened:
    - snapshot_snapper_updatedb_configuration_files
  with_items:
    - "{{ snapshot_snapper_config_templates_dir }}/default"

- name: Copy diverted configuration file to original location
  command: cp {{ item }}.dpkg-divert {{ item }}
  args:
    creates: "{{ item }}"
  when: updatedb_diverted|changed
  with_flattened:
    - snapshot_snapper_updatedb_configuration_files
  with_items:
    - "{{ snapshot_snapper_config_templates_dir }}/default"

- name: Configure updatedb to not include snapshots
  command: grep PRUNENAMES=.*{{ snapshot_snapper_snapshot_directory }}.* /etc/updatedb.conf
  failed_when: False
  changed_when: False
  when: snapshot_snapper_snapshot_directory is defined and snapshot_snapper_snapshot_directory
  register: updatedb_snapshot

- name: Configure updatedb to not include snapshots
  lineinfile:
    dest: "/etc/updatedb.conf"
    backrefs: yes
    regexp: '^(# )?PRUNENAMES=(".*)"$'
    line: 'PRUNENAMES=\2 {{ snapshot_snapper_snapshot_directory }}"'
  when: updatedb_snapshot.rc != 0

- name: Configure snapper defaults
  lineinfile:
    dest: "{{ snapshot_snapper_config_templates_dir }}/default"
    regexp: '^{{ item.key|upper }}=".*"$'
    line: '{{ item.key|upper }}="{{ item.value }}"'
  when: item.value and item.value > 0
  with_dict: snapshot_snapper_defaults

- name: Create config for subvolume
  command: snapper -c "{{ item.name|default("root") }}" create-config "{{ item.path }}"
  args:
    creates: "/etc/snapper/configs/{{ item.name }}"
  with_flattened:
    - snapshot_snapper_snapshot_subvols_list
    - snapshot_snapper_snapshot_subvols_group_list
    - snapshot_snapper_snapshot_subvols_host_list
  when: (item.name is defined and (item.state is undefined or (item.state is defined and item.state != 'absent')))

# - name: Applay specific configuration to sub volume snapshot
  # lineinfile:
    # dest: "/etc/snapper/configs/{{ item.name }}"
    # regexp: '^{{ item.config[0] }}='
    # line: 'TIMELINE_LIMIT_YEARLY="1"'
  # with_dict: snapshot_snapper_snapshot_subvols_list
    # # - snapshot_snapper_snapshot_subvols_group_list
    # # - snapshot_snapper_snapshot_subvols_host_list
