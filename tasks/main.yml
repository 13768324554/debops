---
# vim: foldmarker=[[[,]]]:foldmethod=marker

## Preparation and error checking (((

- name: Check for Ansible version without known vulnerabilities
  assert:
    that:
      - 'ansible_version.full | version_compare("2.1.4.0", ">=")'
      - '((ansible_version.minor == 2) and (ansible_version.full | version_compare("2.2.1.0", ">="))) or (ansible_version.minor != 2)'
    msg: 'VULNERABLE or unsupported Ansible version DETECTED, please update to Ansible >= v2.1.4 or a newer Ansible release >= v2.2.1! To skip, add "--skip-tags play::security-assertions" parameter. Refer to the changelog of debops.cryptsetup for details. Exiting.'
  run_once: True
  delegate_to: 'localhost'
  tags: [ 'play::security-assertions' ]

- name: Assert that combined device configuration is valid
  assert:
    that:
      - '(cryptsetup__combined_devices | map(attribute="ciphertext_block_device") | unique | length) == (cryptsetup__combined_devices | length)'
      - '(cryptsetup__combined_devices | map(attribute="name") | unique | length) == (cryptsetup__combined_devices | length)'
  run_once: True
  delegate_to: 'localhost'

- name: Assert that /dev/shm/ is stored in RAM (assumed to be non-persistent)
  ## Also assuming that the keyfile is not swapped out in the short time it is
  ## going to exist in tmpfs.
  command: df /dev/shm --type tmpfs
  changed_when: False

- name: Ensure specified packages are in there desired state
  package:
    name: '{{ item }}'
    state: 'latest'
  with_flattened: '{{ cryptsetup__base_packages }}'

- name: Ensure keyfile and backup directories exist on the remote system
  file:
    path: '{{ item }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0700'
  with_flattened:
    - '{{ cryptsetup__keyfile_remote_location }}'
    - '{{ cryptsetup__header_backup_remote_location }}'

# Making the execution_strategy configurable per device would also be possible
# using Jinja filters but that seems to fail for some reason:
#
# - debug:
#     msg: '{{ ([{"execution_strategy": "serial"}, {"some":23}]) | selectattr("execution_strategy", "equalto", "serial") | list }}'
#
- include: 'manage_devices.yml'
  when: cryptsetup__devices_execution_strategy == 'parallel'
  vars:
    cryptsetup__process_devices: '{{ cryptsetup__combined_devices }}'

- include: 'manage_devices.yml'
  when: cryptsetup__devices_execution_strategy == 'serial'
  with_items: '{{ cryptsetup__combined_devices }}'
  loop_control:
    loop_var: cryptsetup__process_device
