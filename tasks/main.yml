---

- name: Install PHP packages
  apt:
    name: '{{ item|search("php.*-")|ternary(item, "php" + php__version + "-" + item) }}'
    state: 'present'
    install_recommends: False
  with_flattened:
    - '{{ php__server_api_packages }}'
    - '{{ php__base_packages }}'
    - '{{ php__packages }}'
    - '{{ php__group_packages }}'
    - '{{ php__host_packages }}'
    - '{{ php__dependent_packages }}'
  notify: [ 'Restart php-fpm' ]

- name: "Create directory for php*-fpm logs"
  file:
    path: '/var/log/php{{ php__version }}-fpm'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0700'
  when: '"fpm" in php__server_api_packages'

- name: Ensure that required directories exist
  file:
    path: '{{ item }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  with_items:
    - '{{ php__etc_base }}/ansible'
    - '{{ php__etc_base }}/fpm/pool.d'

- name: Generate php.ini configuration
  template:
    src: 'etc/php/ansible/php.ini.j2'
    dest: '{{ php__etc_base + "/" + item.path | d("ansible/") + (item.filename | d("00-ansible")) + ".ini" }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_flattened:
    - '{{ php__default_configuration }}'
    - '{{ php__configuration }}'
    - '{{ php__group_configuration }}'
    - '{{ php__host_configuration }}'
  when: item.state|d('present') != 'absent'
  notify: [ 'Restart php-fpm' ]
  tags: [ 'role::php:config' ]

- name: Remove php.ini configuration if requested
  file:
    path: '{{ php__etc_base + "/" + item.path | d("ansible/") + (item.filename | d("00-ansible")) + ".ini" }}'
    state: 'absent'
  with_flattened:
    - '{{ php__default_configuration }}'
    - '{{ php__configuration }}'
    - '{{ php__group_configuration }}'
    - '{{ php__host_configuration }}'
  when: item.state|d() and item.state == 'absent'
  notify: [ 'Restart php-fpm' ]
  tags: [ 'role::php:config' ]

- name: Synchronize Ansible and PHP SAPI configuration
  script: script/php-synchronize-config.sh {{ php__version }}
  register: php__register_synchronize_config
  changed_when: php__register_synchronize_config.stdout != ''
  notify: [ 'Restart php-fpm' ]
  tags: [ 'role::php:config' ]

- name: Divert default PHP-FPM configuration and pool
  command: dpkg-divert --quiet --local --divert {{ item + ".dpkg-divert" }}
           --rename {{ item }}
  args:
    creates: '{{ item + ".dpkg-divert" }}'
  notify: [ 'Restart php-fpm' ]
  with_items:
    - '{{ php__etc_base + "/fpm/php-fpm.conf" }}'
    - '{{ php__etc_base + "/fpm/pool.d/www.conf" }}'
  when: '"fpm" in php__server_api_packages'
  tags: [ 'role::php:pools', 'role::php:config' ]

- name: Generate php-fpm global configuration
  template:
    src: 'etc/php/fpm/php-fpm.conf.j2'
    dest: '{{ php__etc_base }}/fpm/php-fpm.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: '"fpm" in php__server_api_packages'
  notify: [ 'Restart php-fpm' ]
  tags: [ 'role::php:pools', 'role::php:config' ]

- name: Generate php-fpm pool configuration
  template:
    src: 'etc/php/fpm/pool.d/pool.conf.j2'
    dest: '{{ php__etc_base }}/fpm/pool.d/{{ item.name }}.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_flattened:
    - '{{ php__default_pools }}'
    - '{{ php__pools }}'
    - '{{ php__group_pools }}'
    - '{{ php__host_pools }}'
    - '{{ php__dependent_pools }}'
  when: '"fpm" in php__server_api_packages and item.state|d("present") != "absent"'
  notify: [ 'Restart php-fpm' ]
  tags: [ 'role::php:pools', 'role::php:config' ]

- name: Remove php-fpm pool configuration if requested
  file:
    dest: '{{ php__etc_base }}/fpm/pool.d/{{ item.name }}.conf'
    state: 'absent'
  with_flattened:
    - '{{ php__default_pools }}'
    - '{{ php__pools }}'
    - '{{ php__group_pools }}'
    - '{{ php__host_pools }}'
    - '{{ php__dependent_pools }}'
  when: '"fpm" in php__server_api_packages and item.state|d() and item.state == "absent"'
  notify: [ 'Restart php-fpm' ]
  tags: [ 'role::php:pools', 'role::php:config' ]

- name: Make sure that Ansible local facts directory is present
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save PHP-FPM local facts
  template:
    src: 'etc/ansible/facts.d/php.fact.j2'
    dest: '/etc/ansible/facts.d/php.fact'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: php__register_local_facts

- name: Gather facts if they were modified
  action: setup
  when: php__register_local_facts|changed

