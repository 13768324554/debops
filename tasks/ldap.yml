---
# vim: foldmarker=[[[,]]]:foldmethod=marker

- name: Check default ldap config exists
  command: php --file "{{ owncloud__home }}/occ" ldap:show-config ""
  changed_when: False
  register: owncloud__register_ldap_default_config_exits
  become_user: '{{ owncloud__user }}'

- name: Create empty LDAP config
  command: php --file "{{ owncloud__home }}/occ" ldap:create-empty-config
  become_user: '{{ owncloud__user }}'
  when: ('Invalid configID' in owncloud__register_ldap_default_config_exits.stdout)

- name: Set LDAP password
  command: php --file "{{ owncloud__home }}/occ" ldap:set-config "" ldapAgentPassword "{{ owncloud__ldap_password }}"
  changed_when: False
  become_user: '{{ owncloud__user }}'
  no_log: True
  when: (owncloud__ldap_password is string and owncloud__ldap_password|length > 0)

- name: Set LDAP parameters
  command: php --file "{{ owncloud__home }}/occ" ldap:set-config "" "{{ item.key }}" "{{ item.value }}"
  changed_when: False
  become_user: '{{ owncloud__user }}'
  with_dict: '{{ owncloud__ldap_conf_map }}'

- name: Make sure that services OU exists
  ldap_entry:
    dn: '{{ secret_ldap_services_dn }}'
    objectClass: [ 'organizationalUnit' ]
    state: 'present'
    server_uri: '{{ secret_ldap_server_uri }}'
    start_tls:  '{{ secret_ldap_start_tls }}'
    bind_dn: '{{ secret_ldap_admin_bind_dn }}'
    bind_pw: '{{ secret_ldap_admin_bind_pw }}'
  become: '{{ secret_ldap_sudo | bool }}'
  delegate_to: '{{ secret_ldap_delegate_to }}'
  no_log: True
  when: (owncloud__ldap_create_user | bool)

- name: Make sure that LDAP account exists
  ldap_entry:
    dn: '{{ owncloud__ldap_binddn }}'
    objectClass: [ 'organizationalRole', 'simpleSecurityObject' ]
    cn: 'owncloud'
    userPassword: '{{ owncloud__ldap_password | ldappassword("SHA") }}'
    state: 'present'
    server_uri: '{{ secret_ldap_server_uri }}'
    start_tls:  '{{ secret_ldap_start_tls }}'
    bind_dn: '{{ secret_ldap_admin_bind_dn }}'
    bind_pw: '{{ secret_ldap_admin_bind_pw }}'
  become: '{{ secret_ldap_sudo | bool }}'
  delegate_to: '{{ secret_ldap_delegate_to }}'
  no_log: True
  when: (owncloud__ldap_create_user | bool)

- name: Set host bind password in LDAP
  ldap_attr:
    dn: '{{ owncloud__ldap_binddn }}'
    name: '{{ item.key }}'
    values: '{{ item.value }}'
    state: 'exact'
    server_uri: '{{ secret_ldap_server_uri }}'
    start_tls:  '{{ secret_ldap_start_tls }}'
    bind_dn: '{{ secret_ldap_admin_bind_dn }}'
    bind_pw: '{{ secret_ldap_admin_bind_pw }}'
  become: '{{ secret_ldap_sudo | bool }}'
  delegate_to: '{{ secret_ldap_delegate_to }}'
  with_dict:
    userPassword: '{{ owncloud__ldap_password | ldappassword("SHA") }}'
  no_log: True
  when: (owncloud__ldap_create_user | bool)

## FIXME: occ ldap:test-config ''
## Returns 'The configuration is invalid. Please have a look at the logs for further details.' if invalid
## Returns 'The configuration is valid and the connection could be established!' if valid
## Note: Exit code is always 0!!
