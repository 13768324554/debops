---

- name: Configure ~/.ssh/authorized_keys for users
  authorized_key:
    key: "{{ '\n'.join(item.sshkeys) | string }}"
    state: 'present'
    user: '{{ item.name }}'
  with_flattened:
    - '{{ users__root }}'
    - '{{ users__default }}'
    - '{{ users__admins }}'
    - '{{ users__list }}'
    - '{{ users__group_list }}'
    - '{{ users__host_list }}'
    - '{{ users_root       | d([]) }}'
    - '{{ users_default    | d([]) }}'
    - '{{ users_admins     | d([]) }}'
    - '{{ users_list       | d([]) }}'
    - '{{ users_group_list | d([]) }}'
    - '{{ users_host_list  | d([]) }}'
  when: ((item.name is defined and item.name) and
         (item.state|d('present') != 'absent') and
         item.createhome|d(True) and
         (item.sshkeys is defined and item.sshkeys))

- name: Remove ~/.ssh/authorized_keys from user account if disabled
  file:
    path: '~/.ssh/authorized_keys'
    state: 'absent'
  become_user: '{{ item.name }}'
  with_flattened:
    - '{{ users__root }}'
    - '{{ users__default }}'
    - '{{ users__admins }}'
    - '{{ users__list }}'
    - '{{ users__group_list }}'
    - '{{ users__host_list }}'
    - '{{ users_root       | d([]) }}'
    - '{{ users_default    | d([]) }}'
    - '{{ users_admins     | d([]) }}'
    - '{{ users_list       | d([]) }}'
    - '{{ users_group_list | d([]) }}'
    - '{{ users_host_list  | d([]) }}'
  when: ((item.name is defined and item.name) and
         (item.state|d('present') != 'absent') and
         item.createhome|d(True) and
         (item.sshkeys is defined and not item.sshkeys))
