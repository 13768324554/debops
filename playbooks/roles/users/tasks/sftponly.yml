---

- name: Manage sftponly users with uids
  user: name={{ item.name }} state={{ item.state | default('present') }} group={{ item.group | default(item.name) }} createhome=no uid={{ item.uid }} shell={{ item.shell | default(users_sftponly_shell) }} groups={{ item.groups | default('sftponly') }} append={{ item.append | default(True) }}
  with_items:
    - ${users_sftponly}
  when: item.name is defined and item.uid is defined
  tags:
    - users
    - groups

- name: Manage sftponly users without uids
  user: name={{ item.name }} state={{ item.state | default('present') }} group={{ item.group | default(item.name) }} createhome=no shell={{ item.shell | default(users_sftponly_shell) }} groups={{ item.groups | default('sftponly') }} append={{ item.append | default(True) }}
  with_items:
    - ${users_sftponly}
  when: item.name is defined and item.uid is undefined
  tags:
    - users
    - groups

- name: Make sure directory for sftponly user homes exist
  file: path={{ users_sftponly_home | default('/srv/users') }} state=directory owner={{ users_sftponly_owner | default('root') }} group={{ users_sftponly_group | default('sftponly') }} mode={{ users_sftponly_mode | default('0751') }}
  tags:
    - users
    - groups

- name: Manage sftponly user homes
  user: name={{ item.name }} state={{ item.state | default('present') }} home={{ item.home | default(users_sftponly_home + '/' + item.name) }} createhome=yes
  with_items:
    - ${users_sftponly}
  when: item.name is defined
  tags:
    - users
    - groups

- name: Manage sftponly home directories permissions
  file: path={{ item.home | default(users_sftponly_home + '/' + item.name) }} state=directory owner={{ item.home_owner | default(users_sftponly_owner) }} group={{ item.home_group | default(users_sftponly_group) }} mode={{ item.home_mode | default(users_sftponly_mode) }}
  with_items:
    - ${users_sftponly}
  when: item.name is defined and item.state is undefined or item.state is defined and item.state != 'absent'
  tags:
    - users
    - groups

