---

- name: Add Debian source repositories
  apt_repository: repo="deb-src {{ lxc_build_mirror }} {{ ansible_lsb.codename }} main contrib"
                  state=present update_cache=yes

- name: Install packages required for LXC build
  apt: pkg={{ item }} state=latest install_recommends=no
  with_items: [ 'dh-autoreconf', 'doxygen', 'docbook2x', 'graphviz', 'libapparmor-dev',
                'liblua5.2-dev', 'libseccomp-dev', 'libselinux1-dev', 'pkg-config',
                'python3-dev', 'build-essential', 'devscripts', 'dpkg-dev', 'debian-keyring' ]

- name: Find available LXC package version
  shell: rmadison lxc --suite {{ lxc_build_suite }} --arch {{ lxc_build_arch }} | head -n 1 | awk '{print $3}'
  register: lxc_register_dsc_version
  changed_when: False

- name: Derive LXC build directory from available version
  set_fact: lxc_build_root={{ lxc_build_path + '_' + lxc_register_dsc_version.stdout }}

- name: Create LXC build directory
  file: path={{ lxc_build_root }} state=directory owner=root group=root mode=0755

- name: Download LXC package sources
  command: dget {{ lxc_build_mirror }}/pool/main/l/lxc/lxc_{{ lxc_register_dsc_version.stdout }}.dsc
           chdir={{ lxc_build_root }} creates={{ lxc_build_root }}/lxc_{{ lxc_register_dsc_version.stdout }}.dsc
  register: lxc_register_source_download

- name: Find name of downloaded .orig.tar.xz package
  shell: find . -name lxc_*.orig.tar.xz | head -n 1 chdir={{ lxc_build_root }}
  register: lxc_register_orig_package
  changed_when: False
  when: lxc_register_source_download is defined and lxc_register_source_download.changed

- name: Derive name of source directory from .orig.tar.xz package
  shell: tar -Jtf {{ lxc_register_orig_package.stdout }} | cut -f1 -d/ | head -n 1
         chdir={{ lxc_build_root }}
  register: lxc_register_build_source_dir
  changed_when: False
  when: lxc_register_source_download is defined and lxc_register_source_download.changed

- name: Download LXC package build dependencies
  command: apt-get -yq build-dep lxc
  when: lxc_register_source_download is defined and lxc_register_source_download.changed

  # dpkg-buildpackage will emit an error code because there's no private GPG
  # key to sign a package with, but packages themselves will be built
  # correctly; therfore, catch the error code.
- name: Build LXC package
  shell: dpkg-buildpackage || true
         chdir={{ lxc_build_root }}/{{ lxc_register_build_source_dir.stdout }}
  when: lxc_register_source_download is defined and lxc_register_source_download.changed

- name: Get list of built packages
  shell: find . -name lxc_*.deb -or -name lxc-stuff_*.deb chdir={{ lxc_build_root }}
  register: lxc_register_built_packages
  when: lxc_register_source_download is defined and lxc_register_source_download.changed

- name: Install built LXC packages
  shell: dpkg -i {{ lxc_register_built_packages.stdout_lines | join(' ') }} chdir={{ lxc_build_root }}
  register: lxc_register_built_packages_installed
  when: lxc_register_built_packages is defined and lxc_register_built_packages.changed

- name: Check if packages are present in reprepro storage
  local_action: shell find . -name lxc_*.deb | head -n 1 chdir={{ lxc_reprepro_storage }}
  register: lxc_register_reprepro_package
  changed_when: False

- name: Copy built .deb packages to reprepro storage
  fetch: src={{ lxc_build_root }}/{{ item }} dest={{ lxc_reprepro_storage + '/' }} flat=yes
  with_items: lxc_register_built_packages.stdout_lines
  when: (lxc_register_built_packages is defined and lxc_register_built_packages.changed) and
        (lxc_register_reprepro_package is defined and
         lxc_register_reprepro_package.stdout not in lxc_register_built_packages.stdout_lines)

