# {{ ansible_managed }}
{#

  Default nginx server template

#}

{% if nginx_ssl is defined and nginx_ssl and item.ssl is undefined or item.ssl is defined and item.ssl %}
{% if item.listen is defined and item.listen %}
server {
{% if item.listen is iterable %}
{% for line in item.listen %}
	listen {{ line }};
{% endfor %}
{% else %}
	listen {{ item.listen | default('80') }}{% if item.default is defined and item.default == True or nginx_default_name is defined and item.name is defined and nginx_default_name == item.name or item.name is not defined %} default_server{% endif %};
{% endif %}
{% if item.name is defined and item.name %}

	server_name {{ item.name }};
{% endif %}
{% if item.alias is defined and item.alias %}
{% if item.alias is iterable %}
{% for line in item.alias %}
	server_name {{ line }};
{% endfor %}
{% else %}
	server_name {{ item.alias }};
{% endif %}
{% endif %}

{% if item.redirect is defined and item.redirect %}
	return 301 {{ item.redirect }};
{% else %}
	return 301 https://$host$request_uri;
{% endif %}
}

{% elif item.listen is defined and item.listen == False %}
{# Do nothing #}
{% else %}
server {
	listen 80{% if item.default is defined and item.default == True or nginx_default_name is defined and item.name is defined and nginx_default_name == item.name or item.name is not defined %} default_server{% endif %};
{% if item.name is defined and item.name %}

	server_name {{ item.name }};
{% endif %}
{% if item.alias is defined and item.alias %}
{% if item.alias is iterable %}
{% for line in item.alias %}
	server_name {{ line }};
{% endfor %}
{% else %}
	server_name {{ item.alias }};
{% endif %}
{% endif %}

{% if item.redirect is defined and item.redirect %}
	return 301 {{ item.redirect }};
{% else %}
	return 301 https://$host$request_uri;
{% endif %}
}

{% endif %}
server {
{% if item.listen_ssl is defined and item.listen_ssl %}
{% if item.listen_ssl is iterable %}
{% for line in item.listen_ssl %}
	listen {{ line }} ssl;
{% endfor %}
{% else %}
	listen {{ item.listen_ssl | default('443') }}{% if item.default is defined and item.default == True or nginx_default_name is defined and item.name is defined and nginx_default_name == item.name or item.name is not defined %} default_server{% endif %} ssl;
{% endif %}
{% else %}
	listen 443{% if item.default is defined and item.default == True or nginx_default_name is defined and item.name is defined and nginx_default_name == item.name or item.name is not defined %} default_server{% endif %} ssl;
{% endif %}

	ssl_certificate {% if item.ssl_cert is defined and item.ssl_cert %}{{ item.ssl_cert }}{% else %}{{ nginx_pki }}/host/{% if item.ssl_type is defined and item.ssl_type %}{{ item.ssl_type }}{% else %}{{ nginx_default_ssl_type | default('selfsigned') }}{% endif %}/{{ item.ssl_name | default(ansible_fqdn) }}.crt{% endif %};
	ssl_certificate_key {% if item.ssl_key is defined and item.ssl_key %}{{ item.ssl_key }}{% else %}{{ nginx_pki }}/host/private/{{ item.ssl_name | default(ansible_fqdn) }}.key{% endif %};
	ssl_prefer_server_ciphers on;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH EDH+aRSA !aNULL !eNULL !LOW !3DES !RC4 !MD5 !EXP !PSK !SRP !DSS";
	ssl_ecdh_curve secp521r1;
	add_header Strict-Transport-Security "max-age={{ nginx_hsts_age | default('15768000') }}{% if nginx_hsts_subdomains is defined and nginx_hsts_subdomains %}; includeSubDomains{% endif %}";
{% else %}
server {
{% if item.listen is defined and item.listen %}
{% if item.listen is iterable %}
{% for line in item.listen %}
	listen {{ line }};
{% endfor %}
{% else %}
	listen {{ item.listen | default('80') }}{% if item.default is defined and item.default == True or nginx_default_name is defined and item.name is defined and nginx_default_name == item.name or item.name is not defined %} default_server{% endif %};
{% endif %}
{% else %}
	listen 80{% if item.default is defined and item.default == True or nginx_default_name is defined and item.name is defined and nginx_default_name == item.name or item.name is not defined %} default_server{% endif %};
{% endif %}
{% endif %}
{% if item.name is defined and item.name %}

	server_name {{ item.name }};
{% endif %}
{% if item.alias is defined and item.alias %}
{% if item.alias is iterable %}
{% for line in item.alias %}
	server_name {{ line }};
{% endfor %}
{% else %}
	server_name {{ item.alias }};
{% endif %}
{% endif %}

{% if item.redirect is defined and item.redirect %}
	return 301 {{ item.redirect }};
}
{% else %}
	keepalive_timeout {{ item.keepalive | default(nginx_default_keepalive_timeout) }};

{% if item.root is defined and item.root %}
	root {{ item.root }};
{% elif item.name is defined and item.name %}
{% if item.owner is defined and item.owner %}
	root /srv/www/{{ item.owner }}/sites/{{ item.name }}/public;
{% else %}
	root /srv/www/sites/{{ item.name }}/public;
{% endif %}
{% else %}
	root {{ nginx_default_root }};
{% endif %}

{% if item.name is defined and item.name %}
	access_log /var/log/nginx/{{ item.name }}_access.log;
	error_log /var/log/nginx/{{ item.name }}_error.log;

{% endif %}
	index index.html index.htm{% if item.upstream_php5 is defined and item.upstream_php5 %} index.php{% endif %};

	# Temporary fix for CVE-2013-4547
	# http://mailman.nginx.org/pipermail/nginx-announce/2013/000125.html
	if ($request_uri ~ " ") {
		return 444;
	}

{% if item.userdir is defined and item.userdir %}
	location ~ ^/~(.+?)(/.*)?$ {
		alias /srv/www/$1/userdir/public$2;
		index index.html index.htm;
		autoindex on;
	}

{% endif %}
	# Disallow access to hidden files and directories
	location ~ /\. {
		return 404;
		access_log off;
		log_not_found off;
	}

	location = /favicon.ico {
		try_files /favicon.ico =204;
		access_log off;
		log_not_found off;
	}

{% if item.status is defined and item.status or nginx_default_status is defined and nginx_default_status %}
	location = /nginx_status {
		stub_status on;
		access_log off;
{% if nginx_default_status is defined and nginx_default_status %}
{% for address in nginx_default_status %}
		allow {{ address }};
{% endfor %}
{% endif %}
{% if item.status is defined and item.status %}
{% for address in item.status %}
		allow {{ address }};
{% endfor %}
{% endif %}
		deny all;
	}

{% endif %}
{% if item.name is defined and item.name == nginx_default_name or item.name is not defined and item.default is defined and item.default %}
	include /etc/nginx/http-default.d/*.conf;

{% elif item.name is not defined and item.default is not defined %}
	include /etc/nginx/http-default.d/*.conf;

{% endif %}
{% if item.location is defined %}
{% for path in item.location.keys() %}
	location {{ path }} {
{% if item.location[path] %}
		{{ item.location[path] | indent(16) }}
{% endif %}
{% if item.location_allow is defined %}
{% if item.location_allow[path] is defined and item.location_allow[path] %}
{% for address in item.location_allow[path] %}
		allow {{ address }};
{% endfor %}
{% if item.location_deny is defined %}
{% if item.location_deny[path] is defined %}
{% for address in item.location_deny[path] %}
		deny {{ address }};
{% endfor %}
{% endif %}
{% else %}
		deny all;
{% endif %}
{% endif %}
{% endif %}
	}

{% endfor %}
{% else %}
	location / {
		try_files $uri $uri/ $uri.html $uri.htm /index.html /index.htm =404;
	}

{% endif %}
{% if item.upstream_php5 is defined and item.upstream_php5 %}
        location ~ [^/]\.php(/|$) {
                fastcgi_split_path_info ^(.+?\.php)(/.*)$;
                if (!-f $document_root$fastcgi_script_name) {
                        return 404;
                }
                fastcgi_index index.php;
                include fastcgi_params;
                fastcgi_pass {{ item.upstream_php5 }};
	}

{% else %}
	location ~ \.php$ {
		return 403;
	}

{% endif %}
}
{% endif %}


