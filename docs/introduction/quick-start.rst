Quick Start
===========

You can try out DebOps without installing it on your host, using a Docker
container or a Vagrant virtual machine. The DebOps playbook can be executed
against the container/VM to configure it, or the container/VM can be used as
Ansible Controller to configure other, remote hosts.


.. _quick_start__docker:

Quick start with Docker
-----------------------

Start a Docker container which acts as an Ansible Controller host with DebOps
support, based on Debian Stretch:

.. code-block:: console

   docker run -it --rm debops/debops

The DebOps Docker images are automatically regenerated and should contain
latest changes. You can look at the `DebOps Dockerfile`__ for details about the
image configuration.

.. __: https://github.com/debops/debops/blob/master/Dockerfile


.. _quick_start__vagrant:

Quick start with Vagrant
------------------------

Start a Vagrant VM which acts as an Ansible Controller host with DebOps
support, based on Debian Stretch:

.. code-block:: console

   git clone https://github.com/debops/debops ; cd debops
   vagrant up && vagrant ssh

The configuration relies heavily on your Vagrant environment. Having a real
domain is benefical. The box can be used to manage other Debian hosts as well.

See the `DebOps Vagrantfile`__ for more details and configuration variables.

.. __: https://github.com/debops/debops/blob/master/Vagrantfile


Execute DebOps playbook against the host
----------------------------------------

When your desired container/VM is up and ready, you can find the prepared
DebOps project configuration in the :file:`src/controller/` subdirectory of the
unprivileged user account. To run DebOps playbook against the host, execute the
commands:

.. code-block:: console

   cd src/controller
   debops

At the moment, some of the DebOps roles don't work well in a Docker container,
therefore inside one you might want to skip some roles for now:

.. code-block:: console

   debops --skip-tags role::sysctl

.. warning::

   The default configuration assumes that this is a testing environment - for
   example, Diffie-Hellman parameters generated by the :ref:`debops.dhparam` role
   are very small, only 512 bytes, to make their generation faster. If you want to
   use the configuration located in :file:`src/controller/` directory against
   production hosts, you should review it before doing so.
