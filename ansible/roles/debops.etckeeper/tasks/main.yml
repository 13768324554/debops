---
# vim: foldmarker=[[[,]]]:foldmethod=marker

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save etckeeper local facts
  template:
    src: 'etc/ansible/facts.d/etckeeper.fact.j2'
    dest: '/etc/ansible/facts.d/etckeeper.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  register: etckeeper__register_facts

- name: Update Ansible facts if they were modified
  action: setup
  when: etckeeper__register_facts is changed

## Diverting the main configuration of etckeeper away leaves the VCS
## uninitiated until it has been fully configured.
- name: Divert original configuration under /etc
  command: dpkg-divert --quiet --local --divert "{{ item }}.dpkg-divert" --rename "{{ item }}"
  args:
    creates: '{{ item }}.dpkg-divert'
  when: (ansible_pkg_mgr == 'apt')
  with_items: [ '/etc/etckeeper/etckeeper.conf' ]

- name: Install required packages
  apt:
    name: '{{ item }}'
    state: 'present'
    install_recommends: False
  when: (ansible_pkg_mgr == 'apt')
  with_flattened:
    - '{{ etckeeper__vcs_command_to_package_mapping[etckeeper__vcs]|d(etckeeper__vcs) }}'
    - 'etckeeper'

- name: Create etckeeper configuration
  template:
    src: 'etc/etckeeper/etckeeper.conf.j2'
    dest: '/etc/etckeeper/etckeeper.conf'
    mode: 0644
    owner: 'root'
    group: 'root'
  register: etckeeper__register_config
  notify: [ 'Commit changes in etckeeper' ]

- name: Initial VCS
  command: etckeeper init
  args:
    creates: '/etc/.etckeeper'
  register: etckeeper__register_init
  notify: [ 'Commit changes in etckeeper' ]

- name: Add entries to /etc/.gitignore
  blockinfile:
    path: '/etc/.gitignore'
    block: |
      {%
        for item in
          etckeeper__ignore_role_list | d() | list
          + etckeeper__ignore_list | d() | list
          + etckeeper__ignore_host_group_list | d() | list
          + etckeeper__ignore_host_list | d() | list
      %}
      {{ item }}
      {% endfor %}
    insertbefore: 'BOF'
    marker: '# {mark} section managed by Ansible'
    create: Yes
    mode: 0600
    owner: root
    group: root
  register: etckeeper__register_gitignore
  when: (etckeeper__vcs == 'git')

- name: Install /etc/.gitattributes configuration
  template:
    src: 'etc/gitattributes.j2'
    dest: '/etc/.gitattributes'
    mode: 0644
    owner: 'root'
    group: 'root'
  register: etckeeper__register_gitattributes
  when: (etckeeper__vcs == 'git')

- name: Set repository permissions
  file:
    state: 'directory'
    path: '/etc/.git'
    mode: '{{ etckeeper__repository_permissions|d("0700") }}'
    owner: 'root'
    group: '{{ etckeeper__repository_group|d("root") }}'
  when: (etckeeper__vcs == 'git')

## Set VCS user, email used for auto committing changes [[[
- name: Set user, email for the git repository
  ini_file:
    dest: '/etc/.git/config'
    section: 'user'
    option: '{{ item.key }}'
    value: '{{ item.value }}'
  with_dict:
    name: '{{ etckeeper__vcs_user }}'
    email: '{{ etckeeper__vcs_email }}'
  when: (etckeeper__vcs == 'git' and etckeeper__vcs_user|d() and etckeeper__vcs_email|d())
  tags: [ 'role::etckeeper:vcs_config' ]

- name: Set user, email for the bzr repository
  command: etckeeper vcs whoami '{{ etckeeper__vcs_user }} <{{ etckeeper__vcs_email }}>'
  when: (etckeeper__vcs == 'bzr' and etckeeper__vcs_user|d() and etckeeper__vcs_email|d())
  tags: [ 'role::etckeeper:vcs_config' ]

- name: Set user, email for the darcs repository
  command: etckeeper vcs setpref author '{{ etckeeper__vcs_user }} <{{ etckeeper__vcs_email }}>'
  when: (etckeeper__vcs == 'darcs' and etckeeper__vcs_user|d() and etckeeper__vcs_email|d())
  tags: [ 'role::etckeeper:vcs_config' ]

- name: Set user, email for the hg repository
  command: "etckeeper vcs --config 'ui.username={{ etckeeper__vcs_user }} <{{ etckeeper__vcs_email }}>'"
  when: (etckeeper__vcs == 'hg' and etckeeper__vcs_user|d() and etckeeper__vcs_email|d())
  tags: [ 'role::etckeeper:vcs_config' ]
## ]]]

- name: Unstage and remove ignored files from Git index
  shell: etckeeper vcs ls-files -i --exclude-standard -z | xargs -0 --no-run-if-empty etckeeper vcs rm --cached --
  register: etckeeper__register_git_rm_cached_ignored_files
  when:
    - etckeeper__vcs == "git"
    - etckeeper__register_gitignore|changed
  changed_when: etckeeper__register_git_rm_cached_ignored_files.stdout

- name: Commit changes in configuration
  command: etckeeper commit '{{ etckeeper__commit_message_update
                                if etckeeper__installed|bool
                                else etckeeper__commit_message_init }}'
  when: etckeeper__register_init is changed or
        etckeeper__register_config is changed or
        etckeeper__register_gitignore is changed or
        etckeeper__register_gitattributes is changed
