#!/bin/bash
{% set host = item.0 %}

# {{ ansible_managed }}

currenttype="${1:-hourly}"
prevtype="${2:-null}"
logfile="${3}"

run_rsnapshot_command () {
  local config_file="${1}"
  local type="${2}"

  if [ -n "${logfile}" ] ; then
    rsnapshot -c ${config_file} ${type} >> ${logfile} 2>&1
    rc=$?
  else
    rsnapshot -c ${config_file} ${type}
    rc=$?
  fi
  return ${rc}
}

send_logfile () {
  if [ -n "${logfile}" ] && [ -s ${logfile} ] ; then
    cat ${logfile} >> /var/log/rsnapshot/{{ host.name }}.log
    cat ${logfile} | sed -e 's/\r$//' | mail -s "Backup log from rsnapshot for {{ host.name }}" -r root@{{ ansible_fqdn }} {{ (host.mail_to | default(rsnapshot_mail_to)) | join(" ") }}
  fi
}

if [ -n "${logfile}" ] ; then
  test -f ${logfile} && trap "rm -f ${logfile}" EXIT
fi

confdir="$(dirname ${0})"

if [ ! -r ${confdir}/disabled ] && [ -r ${confdir}/rsnapshot.conf ] ; then
  config="${confdir}/rsnapshot.conf"
  if $(grep -E "^retain\s+${currenttype}\s+" ${config} > /dev/null) ; then
{% if (host.sleep is undefined or
       (host.sleep is defined and host.sleep)) %}

    case "${currenttype}" in
      hourly)               sleeptime="{{ ((host.sleep | default(rsnapshot_sleep) | int) * 1)  | round | int }}"  ;;
      daily|weekly|monthly) sleeptime="{{ ((host.sleep | default(rsnapshot_sleep) | int) * 10) | round | int }}" ;;
      *)                    sleeptime="{{ ((host.sleep | default(rsnapshot_sleep) | int) * 1)  | round | int }}"  ;;
    esac

    sleep $[ ( $RANDOM % ${sleeptime} ) + 1 ]m
{% endif %}

    if $(grep -E "^sync_first\s+1" ${config} > /dev/null) ; then
      if ! $(grep -E "^retain\s+${prevtype}\s+" ${config} > /dev/null) ; then
        run_rsnapshot_command ${config} sync
        rc=$?
        if [ ${rc} -ne 0 ] ; then
          send_logfile
          exit ${rc}
        fi
      fi
    fi
    run_rsnapshot_command ${config} ${currenttype}
    rc=$?

  elif [ "${currenttype} ${prevtype}" = "now now" ] ; then
    run_rsnapshot_command ${config} sync
    rc=$?
  fi
fi

send_logfile
exit ${rc}

