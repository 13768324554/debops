# {{ ansible_managed }}

{% set ferm_tpl_protocol = [] %}
{% set ferm_tpl_protocol_syn = [] %}
{% set ferm_tpl_dport = [] %}
{% set ferm_tpl_state = [] %}
{% set ferm_tpl_subchain = item.type + "-" + item.name %}
{% if item.protocol|d() %}
{%   if item.protocol is string %}
{%     set ferm_tpl_protocol = [ item.protocol ] %}
{%   else %}
{%     set ferm_tpl_protocol = item.protocol | unique %}
{%   endif %}
{% elif item.protocols|d() %}
{%   if item.protocols is string %}
{%     set ferm_tpl_protocol = [ item.protocols ] %}
{%   else %}
{%     set ferm_tpl_protocol = item.protocols | unique %}
{%   endif %}
{% endif %}
{% if item.protocol_syn is defined %}
{%   if item.protocol_syn | bool %}
{%     set ferm_tpl_protocol_syn = [ 'syn' ] %}
{%   elif not item.protocol_syn | bool %}
{%     set ferm_tpl_protocol_syn = [ '! syn' ] %}
{%   endif %}
{% endif %}
{% if item.dport|d() %}
{%   if item.dport is string %}
{%     set ferm_tpl_dport = [ item.dport ] %}
{%   else %}
{%     set ferm_tpl_dport = item.dport | unique %}
{%   endif %}
{% endif %}
{% if item.state|d() %}
{%   if item.state is string %}
{%     set ferm_tpl_state = [ item.state ] %}
{%   else %}
{%     set ferm_tpl_state = item.state | unique %}
{%   endif %}
{% endif %}
{% if item.subchain|d() %}
{%   set ferm_tpl_subchain = item.subchain %}
{% endif %}
{% set ferm_tpl_arguments = [] %}
{% if ferm_tpl_protocol %}
{%   set _ = ferm_tpl_arguments.append("protocol (" + ferm_tpl_protocol | join(" ") + ")") %}
{% endif %}
{% if ferm_tpl_protocol_syn %}
{%   set _ = ferm_tpl_arguments.append(ferm_tpl_protocol_syn | join(" ")) %}
{% endif %}
{% if ferm_tpl_dport %}
{%   set _ = ferm_tpl_arguments.append("dport (" + ferm_tpl_dport | join(" ") + ")") %}
{% endif %}
{% if ferm_tpl_state %}
{%   set _ = ferm_tpl_arguments.append("mod state state (" + ferm_tpl_state | join(" ") + ")") %}
{% endif %}
{% if item.enabled is undefined or item.enabled | bool %}
{%   if ferm_tpl_subchain %}
{%     set _ = ferm_tpl_arguments.append('@subchain "' + ferm_tpl_subchain + '"') %}
{%   endif %}
{% endif %}
{% if item.when is undefined or item.when | bool %}
{%   if ferm_tpl_arguments %}{{ ferm_tpl_arguments | join(" ") }} {% endif %}{
{%   if item.enabled is undefined or item.enabled | bool %}

    mod hashlimit    hashlimit {{ item.hashlimit }}
{%     if item.hashlimit_burst|d() %}
                     hashlimit-burst {{ item.hashlimit_burst }}
{%     endif %}
                     hashlimit-mode {{ item.hashlimit_mode | d("srcip") }}
                     hashlimit-name {{ item.hashlimit_name | d(item.name) }}
{%     if item.hashlimit_expire is undefined or item.hashlimit_expire %}
                     hashlimit-htable-expire {{ ((item.hashlimit_expire|d("1800")) | int * 1000) }}
{%     endif %}
                     {{ item.hashlimit_jump | d("ACCEPT") }};
{%     if item.log is undefined or item.log | bool %}

    mod limit        limit {{ item.log_limit | d("3/hour") }} limit-burst {{ item.log_burst | d("5") }} {
        LOG log-prefix "{{ item.log_prefix | d('iptables-' + item.name + ': ') }}";
    }
{%     endif %}
{%     if item.jump|d() %}

    jump {{ item.jump }};
{%     elif item.reject is undefined or item.reject | bool %}

    REJECT reject-with {{ item.reject_with | d("icmp-admin-prohibited") }};
{%     endif %}
{%   else %}
    {{ item.hashlimit_jump | d("ACCEPT") }};
{%   endif %}
}
{% else %}
# Rule disabled by 'item.when' condition
{% endif %}

