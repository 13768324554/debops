# This file is managed by Ansible, all changes will be lost

# iptables firewall managed by ferm

# You can put custom ferm configuration files in directories:
#
# - /etc/ferm/filter-input.d/
#       for table filter, chain INPUT; it will be automatically included in the
#       chain, so you don't need to add these ferm subsections
#
# - /etc/ferm/ferm.d/
#       for all other tables and chains; you need to add full ferm
#       configuration here, this directory is included at the end of the file.
#       ferm will correctly merge your own configuration with the rest.


# Global firewall variables
@def $domains		= ({{ ferm_filter_domains | unique | join(" ") }});
@def $ipv4_enabled	= {% if 'ip'  in ferm_filter_domains %}1{% else %}0{% endif %};
@def $ipv6_enabled	= {% if 'ip6' in ferm_filter_domains %}1{% else %}0{% endif %};


domain $domains table filter {

	# Default chain policy
	chain INPUT    policy {{ ferm_default_policy_input   | default('DROP') }};
	chain OUTPUT   policy {{ ferm_default_policy_output  | default('ACCEPT') }};
	chain FORWARD  policy {{ ferm_default_policy_forward | default('DROP') }};

	chain INPUT {

		@include "rules/filter/input/";

{% if ferm_filter_recent|d() and ferm_filter_recent %}
		# Drop connections from bad guys
		mod recent name "{{ ferm_block_recent }}" update seconds {{ ferm_block_time }} {
{% if ferm_log_issues is defined and ferm_log_issues %}
			mod limit limit 3/hour limit-burst 5 {
				LOG log-prefix "iptables-recent-{{ ferm_block_recent }}: " log-level warning;
			}
{% endif %}
			REJECT reject-with icmp-admin-prohibited;
		}

{% endif %}
		# Include INPUT rules for enabled domains (IPv4, IPv6)
		@include 'filter-input.d/';

{% if ferm_filter_recent|d() and ferm_filter_recent | bool %}
{% if ferm_mark_portscan is defined and ferm_mark_portscan %}
		# Catch bad guys (port scanners)
		mod recent set name "{{ ferm_block_recent }}" {
{% if ferm_log_issues is defined and ferm_log_issues %}
			mod limit limit 3/hour limit-burst 5 {
				LOG log-prefix "iptables-portscan: " log-level warning;
			}
{% endif %}
		}

{% endif %}
{% endif %}
		# Reject everything else
		protocol udp REJECT reject-with icmp-port-unreachable;
		protocol tcp REJECT reject-with tcp-reset;
		@if @eq($DOMAIN, ip) {
			REJECT reject-with icmp-proto-unreachable;
		}
	}

	chain FORWARD {
		@include 'rules/filter/forward/';
	}

	chain OUTPUT {
		@include "rules/filter/output/";
	}
}

# Include other configuration files
@include 'ferm.d/';

{% if ferm_fail2ban is defined and ferm_fail2ban %}
# Reload fail2ban rules if fail2ban-server is active
@hook post "type fail2ban-server > /dev/null && (fail2ban-client ping > /dev/null && fail2ban-client reload > /dev/null || true) || true";

{% endif %}
