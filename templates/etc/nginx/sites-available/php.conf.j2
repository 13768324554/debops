{% extends "default.conf.j2" %}
{#
#
#    ---- nginx server template for PHP websites ----
#
# List of parameters supported by this template:
#
#   - item.php_upstream: ''
#       Name of nginx upstream to use.
#
#       If undefined, '.php' files will be protected by =403.
#
#
#   - item.index: ''
#       String of index files to enable.
#
#       If undefined, add 'index.php' at the end of list of index files.
#
#
#   - item.php_limit_except: '' or False
#       String of methods to allow for all hosts.
#
#       If undefined, default limits will be applied (block all requests execpt
#       GET, HEAD and POST).
#
#       If set to False, limits are disabled.
#
#       More information:
#       http://nginx.org/en/docs/http/ngx_http_core_module.html#limit_except
#
#
#   - item.php_include: ''
#       File to include instead of 'fastcgi_params', relative to /etc/nginx/
#
#       If set to False, nothing is included.
#
#
#   - item.php_options: |
#       Additional options to append to php location, in text block format.
#
#
#   - item.php_status: True/False
#       Optional, boolean. Enable php-fpm server status page.
#
#
#   - item.php_status_name: ''
#       Optional. Set the name of the location which should be used for php5 fpm
#       status page
#
#
#   - item.php_status_allow: []
#       Optional. Allow access from list of IP addresses or CIDR ranges.
#
#
#   - item.php_ping_name: ''
#       Optional. Set the name of the location which should be used for php5 fpm
#       ping page
#
#
#}
{% block nginx_tpl_block_index %}
        index {{ item.index | default('index.html index.htm index.php') }};

{% endblock %}
{% block nginx_tpl_block_location_root %}
                try_files $uri $uri/ /index.php =404;
{% endblock %}
{% block nginx_tpl_block_custom_status_locations %}
{%   if item.php_status|d() and item.php_status|bool %}
        location ~ ^/({{ item.php_status_name | d('php_status') }}|{{ item.php_ping_name | d('php_ping') }})$ {
                access_log off;
{%     set nginx__tpl_status_allow = [] %}
{%     if nginx_status_localhost %}
{%       for address in nginx_status_localhost | unique %}
{%         set _ = nginx__tpl_status_allow.append(address) %}
{%       endfor %}
{%     endif %}
{%     if nginx_status %}
{%       for address in nginx_status | unique %}
{%         set _ = nginx__tpl_status_allow.append(address) %}
{%       endfor %}
{%     endif %}
{%     if item.php_status_allow|d() %}
{%       if item.php_status_allow is string %}
{%         set _ = nginx__tpl_status_allow.append(item.php_status_allow) %}
{%       else %}
{%         for address in item.php_status_allow %}
{%           set _ = nginx__tpl_status_allow.append(address) %}
{%         endfor %}
{%       endif %}
{%     endif %}
{%     for address in nginx__tpl_status_allow | sort | unique %}
                allow {{ address }};
{%     endfor %}
                deny all;
                include fastcgi_params;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_pass {{ item.php_upstream }};
        }

{%   endif %}
{% endblock %}
{% block nginx_tpl_block_custom_locations %}
{%   if item.php_upstream|d() %}

        location ~ ^(?!.+\.php/)(?<script_name>.+\.php)$ {
{%     if item.php_limit_except is undefined %}
                limit_except GET HEAD POST { deny all; }

{%     elif item.php_limit_except|d() %}
                limit_except {{ item.php_limit_except if item.php_limit_except is string else item.php_limit_except | join(' ') }} { deny all; }

{%     endif %}
                try_files $script_name =404;

{%     if (item.php_include is undefined or item.php_include|d()) %}
{%       if (nginx_version|d() and nginx_version | version_compare('1.6.1','<')) %}
                include {{ item.php_include | d('fastcgi_params') }};
{%       else %}
{%         if nginx_flavor in [ 'passenger', 'nginx.org' ] %}
                include {{ item.php_include | d('fastcgi_params') }};
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
{%         else %}
                include {{ item.php_include | d('fastcgi.conf') }};
{%         endif %}
{%       endif %}

{%     endif %}
{%     if item.php_options|d() %}
                {{ item.php_options | indent(16) | regex_replace("(?m)^\s*$", "") }}

{%     endif %}
                # Mitigate HTTPOXY attacks (https://httpoxy.org/)
                fastcgi_param HTTP_PROXY "";

                fastcgi_index index.php;
                fastcgi_pass {{ item.php_upstream }};
        }

        location ~ ^(?<script_name>.+\.php)(?<path_info>/.*)$ {
{%     if item.php_limit_except is undefined %}
                limit_except GET HEAD POST { deny all; }

{%     elif item.php_limit_except|d() %}
                limit_except {{ item.php_limit_except if item.php_limit_except is string else item.php_limit_except | join(' ') }} { deny all; }

{%     endif %}
                try_files $script_name =404;

{%     if (item.php_include is undefined or item.php_include|d()) %}
                include {{ item.php_include | default('fastcgi_params') }};
{%       if (item.php_include is undefined) %}
                fastcgi_param SCRIPT_FILENAME $document_root$script_name;
                fastcgi_param PATH_INFO $path_info;
{# This option doesn't work yet... #}
                #fastcgi_param PATH_TRANSLATED $document_root$path_info;

{%       endif %}
{%     endif %}
{%     if item.php_options|d() %}
                {{ item.php_options | indent(16) | regex_replace("(?m)^\s*$", "") }}

{%     endif %}
                # Mitigate HTTPOXY attacks (https://httpoxy.org/)
                fastcgi_param HTTP_PROXY "";

                fastcgi_index index.php;
                fastcgi_pass {{ item.php_upstream }};
        }

{%   else %}
        location ~ \.php$ {
                return 403;
        }
{%   endif %}
{% endblock %}
