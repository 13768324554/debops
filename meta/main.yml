---

dependencies:

  - role: debops.apt_preferences
    tags: apt_preferences
    apt_preferences_dependent_list:
      - package: 'sks'
        backports: [ 'wheezy' ]
        reason: 'Version from wheezy creates gmon.out files everywhere - https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=699847'

  - role: debops.etc_services
    etc_services_dependency_list:
      - name: '{{ sks_recon_name }}'
        port: '{{ sks_recon_port }}'
        comment: 'SKS Keyserver Reconcilliation Service'

      - name: '{{ sks_hkp_frontend_name }}'
        port: '{{ sks_hkp_frontend_port }}'
        comment: 'SKS Keyserver Backend Service'

  - role: debops.ferm

  - role: debops.nginx
    nginx_servers:
      - '{{ sks_nginx_frontend }}'
      - '{{ sks_nginx_ssl_frontend }}'
    nginx_upstreams:
      - '{{ sks_nginx_upstreams }}'
    when: sks_frontends is defined and inventory_hostname in sks_frontends
    tags: nginx

galaxy_info:
  author: 'Maciej Delmanowski'
  description: 'Install and manage SKS Keyserver cluster'
  company: 'DebOps'
  license: 'GNU General Public License v3'
  min_ansible_version: '1.7.0'
  platforms:
  - name: Ubuntu
    versions:
    - precise
    - quantal
    - raring
    - saucy
    - trusty
  - name: Debian
    versions:
    - wheezy
    - jessie
  categories:
  - system

ansigenome_info:
  github_url: "https://github.com/debops/ansible-sks"
  git_branch: "master"
  galaxy_id: "1600"

  travis: True

  license_url: 'https://tldrlegal.com/license/gnu-general-public-license-v3-(gpl-3)'

  authors:
    - name:  'Maciej Delmanowski'
      url: ''
      email: 'drybjed@gmail.com'
      twitter: 'drybjed'
      github: 'drybjed'

  synopsis: |
    [SKS Keyserver](https://sks-keyservers.net/) is an OpenPGP/GnuPG key
    server. This role allows you to install and manage one or more keyservers
    in a cluster. Specified host (by default first host in `[debops_sks]`
    Ansible group) will also be configured as a web frontend to the cluster
    (`nginx` will be used as the frontend webserver).
    
    You can use `debops.sks` role to create your own keyserver pool (and in
    extension your own OpenPGP Web of Trust) or [connect to an existing
    pool](http://www.keysigning.org/sks/). In the latter case, role supports an
    option to not initialize the database by default, in which case you can
    seed your local key database from a keyserver dump (which is a preferred
    option of connecting to the existing pool because of the size of existing
    key database dumps).

