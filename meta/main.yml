---

dependencies:

    # Backport 'rubygems-integration' package
  - role: debops.backporter
    backporter_package: 'rubygems-integration'
    backporter_version: '1.6'
    backporter_source_version: '1.7'
    backporter_source_orig: '.tar.xz'
    backporter_command_dget: 'dget --allow-unauthenticated'
    backporter_install: True
    backporter_cache: '{{ ruby_build_cache }}'
    backporter_install_packages: [ 'rubygems-integration_*.deb' ]
    when: (ruby_version is defined and ruby_version | version_compare('2.1','>='))

    # Backport 'ruby' package
  - role: debops.backporter
    backporter_package: 'ruby'
    backporter_source_package: 'ruby-defaults'
    backporter_version: '2.1'
    backporter_source_version: '2.1.0.1'
    backporter_source_orig: '.tar.xz'
    backporter_command_dget: 'dget --allow-unauthenticated'
    backporter_install: False
    backporter_cache: '{{ ruby_build_cache }}'
    backporter_upload_packages: [ 'libruby_*.deb', 'libtcltk-ruby_*.deb', 'ri_*.deb', 'ruby-all-dev_*.deb',
                                  'ruby-dev_*.deb', 'ruby-full_*.deb', 'ruby_*.deb' ]
    when: (ruby_version is defined and ruby_version | version_compare('2.1','>='))

    # Backport 'ruby2.1' package
  - role: debops.backporter
    backporter_package: 'ruby2.1'
    backporter_version: '2.1'
    backporter_fake_version: '1.0'
    backporter_source_version: '2.1.2-2'
    backporter_source_orig: '.orig.tar.gz'
    backporter_command_dget: 'dget --allow-unauthenticated'
    backporter_skip_builddep: True
    backporter_install: False
    backporter_cache: '{{ ruby_build_cache }}'
    backporter_upload_packages: [ 'libruby2.1_*.deb', 'ruby2.1-dev_*.deb', 'ruby2.1_*.deb',
                                  'ruby2.1-doc_*.deb', 'ruby2.1-tcltk_*.deb' ]
    backporter_prerequisites: [ 'autotools-dev', 'bison', 'chrpath', 'debhelper', 'dh-autoreconf',
                                'libffi-dev', 'libgdbm-dev', 'libgmp-dev', 'libncurses5-dev',
                                'libncursesw5-dev', 'libreadline6-dev', 'libssl-dev', 'libyaml-dev',
                                'ruby', 'systemtap-sdt-dev', 'tcl-dev', 'tk-dev', 'tcl8.5-dev',
                                'tk8.5-dev', 'zlib1g-dev' ]
    when: (ruby_version is defined and ruby_version | version_compare('2.1','>='))

    # Install backported packages
  - role: debops.backporter
    backporter_cache: '{{ ruby_build_cache }}'
    backporter_prerequisites: [ 'libjs-jquery' ]
    backporter_install_packages: [ 'libruby2.1_*.deb', 'libruby_*.deb',
                                   'ruby2.1_*.deb', 'ruby_*.deb', 'ruby2.1-doc_*.deb',
                                   'rubygems-integration_*.deb', 'ruby-dev_*.deb',
                                   'ruby2.1-dev_*.deb', 'ruby-all-dev_*.deb' ]
    when: (ruby_version is defined and ruby_version | version_compare('2.1','>='))

galaxy_info:
  author: 'Maciej Delmanowski'
  description: 'Backport Ruby 2.1 packages from Debian Jessie to Debian Wheezy'
  company: 'DebOps'
  license: 'GNU General Public License v3'
  min_ansible_version: '1.7.0'
  platforms:
  - name: Ubuntu
    versions:
    - trusty
  - name: Debian
    versions:
    - wheezy
    - jessie
  categories:
  - development
  - packaging
  - system

ansigenome_info:
  github_url: "https://github.com/debops/ansible-ruby"
  git_branch: "master"
  galaxy_id: "1595"

  travis: True

  license_url: 'https://tldrlegal.com/license/gnu-general-public-license-v3-(gpl-3)'

  authors:
    - name:  'Maciej Delmanowski'
      url: ''
      email: 'drybjed@gmail.com'
      twitter: 'drybjed'
      github: 'drybjed'

  synopsis: |
    `debops.ruby` role installs selected Ruby version via APT package manager.
    By default, version `2.1` will be installed, but you can also specify
    version `1.9.1` to install packages already present in your distribution
    (Ubuntu or Debian Wheezy).
    
    If you are installing Ruby 2.1 packages on Debian Wheezy, this role will
    use `debops.backporter` role to automatically backport all required
    packages from Debian Jessie. These packages will be installed on the build
    host and uploaded to Ansible Controller to a specific directory, where
    `debops.reprepro` role can find them and automatically import them to local
    APT repository, at which point these packages will become available to all
    hosts in a cluster.
    
    This role will also install gems from [RubyGems](http://rubygems.org/)
    specified in a list.

