---

dependencies:
  - role: debops.etc_services
    etc_services_dependency_list:
      - name: 'elasticsearch-multicast'
        port: '{{ elasticsearch_discovery_multicast_port }}'

  - role: debops.ferm
    ferm_input_group_list:
      - type: 'dport_accept'
        dport: ['{{ elasticsearch_node_port | replace("-", ":") }}']
        saddr: '{{ elasticsearch_node_allow }}'
      - type: 'dport_accept'
        dport: ['{{ elasticsearch_http_port | replace("-", ":") }}']
        saddr: '{{ elasticsearch_http_allow }}'
      - type: 'dport_accept'
        protocol: 'udp'
        dport: ['elasticsearch-multicast']
        saddr: '{{ elasticsearch_multicast_allow }}'

  - role: debops.java
    tags: java
    when: elasticsearch_role_dependencies is defined and
          'java' in elasticsearch_role_dependencies

galaxy_info:
  author: 'Nick Janetakis'
  description: 'Install and manage Elasticsearch database clusters'
  company: 'DebOps'
  license: 'GNU General Public License v3'
  min_ansible_version: '1.7.0'
  platforms:
  - name: Ubuntu
    versions:
    - precise
    - quantal
    - raring
    - saucy
    - trusty
  - name: Debian
    versions:
    - wheezy
    - jessie
  categories:
  - clustering
  - database
  - database:nosql

ansigenome_info:
  github_url: "https://github.com/debops/ansible-elasticsearch"
  galaxy_id: "1694"

  travis: True

  license_url: 'https://tldrlegal.com/license/gnu-general-public-license-v3-(gpl-3)'

  authors:
    - name:  'Nick Janetakis'
      url: ''
      email: 'nick.janetakis@gmail.com'
      twitter: 'nickjanetakis'
      github: 'nickjj'

  synopsis: |
    ``debops.elasticsearch`` role allows you to easily setup infrastructure
    capable of running Elasticsearch.
    
    What are a few features available in this role?
    ===============================================
    
    - Seamless clustering
    - Easily pick node types through groups and also allow you to do it manually
    - Add/Remove plugins and libs on demand
      - You can even set custom configuration to each plugin, check the defaults
    - Tweak pretty much everything that ES allows you to

  usage: |
    Below is a breakdown of how you can use groups to allocate different node
    types to a number of servers. If all you want to do is use ES as a single
    server dependency in another role then include the role in your role's
    meta main file. You don't have to add the groups in your inventory in that case.
    
    hosts
    =====
    
    Elasticsearch has 2 settings, ``node.master`` and ``node.data``. A combination
    of those settings being ``True`` or ``False`` determines what type of node your
    server will be.
    
    Master servers (``node.master: True`` and ``node.data: True``)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    
    This is the default setting for all nodes in elasticsearch.
    
    ::
    
        [debops_elasticsearch_master]
        apple
        orange
        banana
    
    Workhorse servers (``node.master: False`` and ``node.data: True``)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    
    The server will never become a master but it will hold data.
    
    ::
    
        [debops_elasticsearch_workhorse]
        red
        blue
    
    Coordinator servers (``node.master: True`` and ``node.data: False``)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    
    A coordinator can become master but it doesn't store data. Its goal is to
    always have a lot of free resources.
    
    ::
    
        [debops_elasticsearch_coordinator]
        nyancat
    
    Search load balancer servers (``node.master: False` and ``node.data: False``)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    
    A server of this type would be used to fetch data from other servers,
    aggregate results, etc..
    
    ::
    
        [debops_elasticsearch_loadbalancer]
        judge
        jury
    
    Grouping them all up
    ====================
    
    It's always useful to have a common group that composes everything.
    Elasticsearch will be installed on any server that belongs to any of the above groups.
    
    This group would mainly be used for firewall settings which would apply to
    all of your ES nodes. It does not control whether or not ES gets installed.
    
    ::
    
        [debops_elasticsearch:children]
        debops_elasticsearch_master
        debops_elasticsearch_workhorse
        debops_elasticsearch_coordinator
        debops_elasticsearch_loadbalancer
    
    What's with all of the groups?
    ==============================
    
    They are just shortcuts to setting the 2 node settings for you. You don't
    have to use the extra groups. By all means create custom groups and set the
    variables yourself if you want.
    
    You can also edit the defaults to use your own custom group names and still
    get the benefits of group based node type separation.
    
    inventory/group_vars/debops_elasticsearch.yml
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    
    ::
    
        elasticsearch_bind_host: ['0.0.0.0']
        elasticsearch_node_allow: '{{ groups["debops_elasticsearch"] }}'
        elasticsearch_http_allow: '{{ groups["your_web_apps"] }}'
    
        # The above example tells ES to accept connections from anywhere and then
        # white lists your ES group so they can all talk to each other
    
        # In addition to that is white lists your app servers so they can access the
        # ES HTTP API to actually query ES

