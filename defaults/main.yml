---
# Default variables
# =================

# .. contents:: Sections
#    :local:
#
# .. Package management options (((
# -------------------
#   Package management options
# -------------------

# .. envvar:: etckeeper_highlevel_package_manager
#
# The high-level package manager that's being used.
# (:command:`apt`, :command:`pacman-g2`, :command:`yum`, :command:`dnf`, :command:`zypper` etc).
# This will only be used when your distribution was not able to predefine this.
etckeeper_highlevel_package_manager: '{{ ansible_pkg_mgr }}'


# .. envvar:: etckeeper_lowlevel_package_manager
#
# The low-level package manager that's being used.
# (:command:`dpkg`, :command:`rpm`, :command:`pacman`, :command:`pacman-g2`, etc)
# This will only be used when your distribution was not able to predefine this.
etckeeper_lowlevel_package_manager: |
  {{ etckeeper_highlevel_to_lowlevel_package_manager_mapping[etckeeper_highlevel_package_manager]|d("") }}

# .. )))


# .. Version control options (((
# -------------------
#   Version control options
# -------------------

# .. envvar:: etckeeper_vcs
#
# Which VCS to use to version :file:`/etc/`.
# Choices are:
#
# * :command:`git` (default)
# * :command:`hg`
# * :command:`bzr`
# * :command:`darcs`
#
# Note that any other VCS than ``git`` has not really been tested. You might
# have to fix some bugs in this role when you want to use them.
etckeeper_vcs: 'git'


# .. envvar:: etckeeper_vcs_user
#
# Globally set the user for the VCS specified as ``etckeeper_vcs`` for the
# system user on the remote system.
# Defaults to a empty string which does not not configure a user to use by the
# VCS.
#
# Example:
#
# .. code::
#
#    etckeeper_vcs_user: 'root'
#
etckeeper_vcs_user: ''


# .. envvar:: etckeeper_vcs_email
#
# Globally set the email address for the VCS specified as ``etckeeper_vcs`` for
# the system user on the remote system.
# Defaults to a empty string which does not not configure a email address to
# use by the VCS.
#
# Example:
#
# .. code::
#
#    etckeeper_vcs_email: '{{ etckeeper_vcs_user + "@" + ansible_fqdn }}'
#
etckeeper_vcs_email: ''


# .. envvar:: etckeeper_git_commit_options
#
# Options passed to git commit when run by etckeeper.
etckeeper_git_commit_options: ''


# .. envvar:: etckeeper_hg_commit_options
#
# Options passed to hg commit when run by etckeeper.
etckeeper_hg_commit_options: ''


# .. envvar:: etckeeper_hg_commit_options
#
# Options passed to bzr commit when run by etckeeper.
etckeeper_bzr_commit_options: ''


# .. envvar:: etckeeper_darcs_commit_options
#
# Options passed to darcs record when run by etckeeper.
etckeeper_darcs_commit_options: '-a'


# .. envvar:: etckeeper_avoid_daily_autocommits
#
# Uncomment to avoid :program:`etckeeper` committing existing changes
# to :file:`/etc` automatically once per day.
etckeeper_avoid_daily_autocommits: False


# .. envvar:: etckeeper_avoid_special_file_warning
#
# Uncomment the following to avoid special file warning
# (the option is enabled automatically by cronjob regardless).
etckeeper_avoid_special_file_warning: False


# .. envvar:: etckeeper_avoid_commit_before_install
#
# Uncomment the following to avoid special file warning
# (the option is enabled automatically by cronjob regardless).
etckeeper_avoid_commit_before_install: False


# .. envvar:: etckeeper_push_remote
#
# To push each commit to a remote, put the name of the remote here.
# (eg, "origin" for git). Space-separated lists of multiple remotes
# also work (eg, "origin gitlab github" for git).
etckeeper_push_remote: ''


# .. envvar:: etckeeper_gitignore
#
# "Global" list of gitignore entries.
etckeeper_gitignore:
  ## There is no benefit in tracking Tor keys and is a potential security vulnerability.
  - 'tor/keys/'


# .. envvar:: etckeeper_gitignore_group
#
# "Host group" list of gitignore entries.
etckeeper_gitignore_group: []


# .. envvar:: etckeeper_gitignore_host
#
# "Host" list of gitignore entries.
etckeeper_gitignore_host: []

# .. )))
