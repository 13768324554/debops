---
# Default variables
# =================

# .. contents:: Sections
#    :local:
#
# -------------------
#   System packages
# -------------------

# .. envvar:: owncloud_base_packages
#
# List of base packages required by ownCloud.
owncloud_base_packages:
  - 'owncloud'
  - 'owncloud-server'

# --- Basic options ---

# Should ownCloud role manage it's own dependencies (nginx, php5, postgresql, mysql)?
# If you want to setup them differently, you should change this to False
owncloud_dependencies: True

# Domain that will be configured for the ownCloud instance
owncloud_domain: [ 'owncloud.{{ ansible_domain }}' ]


# --------------------------
#   ownCloud source and deployment
# --------------------------

owncloud_edition: community
owncloud_release: 8.1
owncloud_apt_repo_base: 'http://download.opensuse.org/repositories/isv:/ownCloud:'
owncloud_apt_repo_key_fingerprint: 'F9EA4996747310AE79474F44977C43A8BA684223'

# User and group that will be used for ownCloud instance
owncloud_user: 'www-data'
owncloud_group: 'www-data'
owncloud_home: '/var/www/owncloud'


# Path where ownCloud data/ directory and files are stored
owncloud_data_path: '{{ owncloud_home }}/data' #{{ owncloud_domain[0] }}'

# Where ownCloud instance will be deployed (web root)
owncloud_deploy_path: '{{ owncloud_home }}'


# --------------------------
#   Database configuration
# --------------------------

# .. envvar:: owncloud_database_server
#
# FQDN of the database server. It will be configured by
# the ``debops.mariadb`` role.
# Currently only supported for MySQL/MariaDB.
owncloud_database_server: '{{ ansible_local.mariadb.server }}'


# .. envvar:: owncloud_database_user
#
# Database user to use for ownCloud.
owncloud_database_user: 'owncloud'


# .. envvar:: owncloud_database_name
#
# Name of the database to use for ownCloud.
owncloud_database_name: 'owncloud'


# .. envvar:: owncloud_database_password
#
# Database password for ownCloud.
owncloud_database_password: "{{ lookup('password', secret + '/mariadb/' +
                                ansible_local.mariadb.delegate_to +
                                '/credentials/' + owncloud_database_user +
                                '/password length=48') }}"

# ownCloud recommends MySQL or MariaDB as database. Set to False to use SQLite.
# https://doc.owncloud.org/server/8.1/admin_manual/configuration_database/linux_database_configuration.html#database-configuration
# Choices see ``owncloud_database_map``.
owncloud_database: 'mariadb'

# .. envvar:: owncloud_database_map
#
owncloud_database_map:

  # MySQL/MariaDB database
  mariadb:
    dbtype: 'mysql'
    dbname: '{{ owncloud_database_name|d(owncloud_user) }}'
    dbuser: '{{ owncloud_database_user|d(owncloud_user) }}'
    dbpass: '{{ owncloud_database_password }}'
    dbhost: '{{ owncloud_database_server|d("localhost") }}'
    dbtableprefix: ''

  # PostgreSQL database on localhost, connection through Unix socket, no default password
  postgresql:
    dbtype: 'pgsql'
    dbname: '{{ owncloud_database_name|d(owncloud_user) }}'
    dbuser: '{{ owncloud_database_user|d(owncloud_user) }}'
    dbpass: ''
    dbhost: '{{ owncloud_database_server|d("/var/run/postgresql") }}'
    dbtableprefix: ''

  sqlite:
    dbtype: 'sqlite'


# --------------------
#   ownCloud admin login/password
# --------------------

# .. envvar:: owncloud_admin_username
#
# Default admin username, in the form 'admin-$USER'
# Set to False to disable automatic username and password
owncloud_admin_username: 'admin-{{ lookup("env","USER") }}'

# .. envvar:: owncloud_admin_password
#
# Default admin password. If the ``debops.secret`` role is enabled, a randomly password will be
# generated instead of this value.
owncloud_admin_password: 'password'

# .. envvar:: owncloud_password_length
#
# Length of randomly generated admin password
owncloud_password_length: '20'

# .. envvar:: owncloud_autosetup
#
# Should Ansible automatically open the ownCloud page to finish the setup on
# it's own? Disabled if admin_username is set to False and done only
# if the config-files are generated in the same run.
# Important: For this to work, name resolution has to be set up when this role
# is executed.
owncloud_autosetup: True


# --------------------
#   ownCloud configuration
# --------------------

# .. envvar:: owncloud_base_packages
#
# Enable APC in PHP CLI. Setting this to True is only needed when you want to
# use the ``occ`` command and use ``\OC\Memcache\APCu`` as memcache.
# See https://github.com/owncloud/core/issues/17329
owncloud_enable_apc_cli: False

# .. envvar:: owncloud_upload_size
#
# Max upload size set in nginx and php5, with amount as M or G
owncloud_upload_size: '128M'

# .. envvar:: owncloud_php5_output_buffering
#
# Output buffering set in php5, with amount set in megabytes
owncloud_php5_output_buffering: '128'

# .. envvar:: owncloud_php5_max_children
#
# Max children processes to run in php5-fpm
owncloud_php5_max_children: '50'

# .. envvar:: owncloud_cron_minute
#
# At what time cron should execute background jobs
owncloud_cron_minute: '*/15'

# .. envvar:: owncloud_initial_config_global
#
# Intitial configuration for ownCloud. Refer to the documentation for details:
# https://doc.owncloud.org/server/8.1/admin_manual/configuration_server/config_sample_php_parameters.html
owncloud_initial_config_global:
  mail_domain: '{{ ansible_domain }}'
  mail_from_address: owncloud
  mail_smtpmode: sendmail
  loglevel: 2
  logdateformat: Y-m-d H:i:s.u # ISO 8601 date: 2004-02-12T15:19:21+00:00
  trashbin_auto_expire: True
  trashbin_retention_obligation: 30
  remember_login_cookie_lifetime: '{{ 60*60*24*15 }}'
  session_lifetime: '{{ 60 * 60 * 24 }}'
  session_keepalive: True

owncloud_initial_config_group: {}

owncloud_initial_config: {}

# .. envvar:: owncloud_run_occ_global_commands
#
# Run the list of occ commands. It can be used to enable apps, add users and
# more which can be useful when deploying ownCloud.
# See: https://doc.owncloud.org/server/8.1/admin_manual/configuration_server/occ_command.html
owncloud_run_occ_global_commands: []
  ## Also requires: php5-ldap
  # - 'app:enable user_ldap'

  # - 'app:enable external'
  # - 'app:enable files_external'

# .. envvar:: owncloud_run_occ_group_commands
#
# See ``owncloud_run_occ_commands_global``.
owncloud_run_occ_group_commands: []

# .. envvar:: owncloud_run_occ_group_commands
#
# See ``owncloud_run_occ_commands_global``.
owncloud_run_occ_host_commands: []
