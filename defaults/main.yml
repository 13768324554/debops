---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# Default variables
# =================

# .. contents:: Sections
#    :local:
#
# .. include:: includes/all.rst

# .. Roundcube user account [[[
#
# --------------------------
#   Roundcube user account
# --------------------------

# .. envvar:: roundcube__user [[[
#
# Roundcube system user account
roundcube__user: 'roundcube'

                                                                   # ]]]
# .. envvar:: roundcube__group [[[
#
# Roundcube system user group
roundcube__group: 'roundcube'

                                                                   # ]]]
# .. envvar:: roundcube__home [[[
#
# Path to the home directory of the Roundcube system account.
roundcube__home: '{{ (ansible_local.root.home
                       if (ansible_local|d() and ansible_local.root|d() and
                           ansible_local.root.home|d())
                       else "/var/local") + "/" + roundcube_user }}'

                                                                   # ]]]
# .. envvar:: roundcube__comment [[[
#
# The GECOS string set for the Roundcube account.
roundcube__comment: 'Roundcube Webmail'

                                                                   # ]]]
# .. envvar:: roundcube__shell [[[
#
# The default shell of the Roundcube account.
roundcube__shell: '/usr/sbin/nologin'
                                                                   # ]]]
                                                                   # ]]]
# .. Roundcube source and deployment [[[1
#
# -----------------------------------
#   Roundcube source and deployment
# -----------------------------------

# .. envvar:: roundcube__src
#
# Base path for git bare repository with Roundcube source
roundcube__src: '{{ ansible_local.root.src + "/" + roundcube__user }}'


# .. envvar:: roundcube__www
#
# Base web root directory for Roundcube website
roundcube__www: '{{ (ansible_local.nginx.www
                    if (ansible_local|d() and
                        ansible_local.nginx|d())
                    else "/srv/www" ) + "/" + roundcube__user }}'


# .. envvar:: roundcube__webserver_user
#
# Roundcube webserver user (needs read-only access to the website code)
roundcube__webserver_user: '{{ ansible_local.nginx.user
                              if (ansible_local|d() and
                                  ansible_local.nginx|d() and
                                  ansible_local.nginx.user|d())
                              else "www-data" }}'


# .. envvar:: roundcube__git_repo
#
# Roundcube source repository
roundcube__git_repo: 'https://github.com/roundcube/roundcubemail.git'


# .. envvar:: roundcube__git_dest
#
# Roundcube source directory on the host
roundcube__git_dest: '{{ roundcube__src + "/" + roundcube__git_repo.split("://")[1] }}'


# .. envvar:: roundcube__git_tag
#
# Roundcube release tag to deploy
roundcube__git_version: '1.1.9'


# .. envvar:: roundcube__git_checkout
#
# Default path where Roundcube source files will be deployed
roundcube__git_checkout: '{{ roundcube__www + "/sites/" +
                             (roundcube__domain if roundcube__domain is string else roundcube__domain[0]) +
                             "/public" }}'


# .. Database configuration [[[1
#
# --------------------------
#   Database configuration
# --------------------------

# .. envvar:: roundcube__database_user
#
# Roundcube database user account
roundcube__database_user: 'roundcube'


# .. envvar:: roundcube__database_password
#
# Roundcube database password
roundcube__database_password: "{{ lookup('password', secret + '/credentials/' + ansible_fqdn + '/roundcube/' + roundcube__database + '/' + roundcube__database_user + '/password length=30') }}"


# .. envvar:: roundcube__database
#
# Database definition to use from the :envvar:`roundcube__database_map`
roundcube__database: 'sqlite-default'


# .. envvar:: roundcube__database_map
#
# Database connection definitions
roundcube__database_map:

  sqlite-default:
    dbtype: 'sqlite'
    dbname: 'db/roundcube.db'

  mysql-default:
    dbtype: 'mysql'
    dbname: 'roundcubemail'
    dbuser: '{{ roundcube__database_user }}'
    dbpass: '{{ roundcube__database_password }}'
    dbhost: 'localhost'
    dbtableprefix: ''


# .. envvar:: roundcube__database_schema
#
# Roundcube database schema loaded by Ansible
roundcube__database_schema: '{{ roundcube__git_checkout + "/SQL/mysql.initial.sql"
    if (roundcube__database_map[roundcube__database].dbtype == "mysql") else ""}}'


# .. Roundcube application options [[[1
#
# ---------------------------------
#   Roundcube application options
# ---------------------------------

# .. envvar:: roundcube__domain
#
# String or List of domains which will be used to access the roundcube instance.
roundcube__domain: [ 'roundcube.{{ ansible_domain }}' ]


# .. envvar:: roundcube__default_host
#
# Mail host chosen to perform the log-in
roundcube__default_host: 'localhost'


# .. envvar:: roundcube__smtp_server
#
# SMTP server host (for sending mails)
roundcube__smtp_server: ''


# .. envvar:: roundcube__smtp_port
#
# SMTP port
roundcube__smtp_port: '25'


# .. envvar:: roundcube__smtp_user
#
# SMTP username (if required) if you use %u as the username Roundcube will
# use the current username for login
roundcube__smtp_user: ''


# .. envvar:: roundcube__smtp_pass
#
# SMTP password (if required) if you use %p as the password Roundcube will
# use the current user's password for login
roundcube__smtp_pass: ''


# .. envvar:: roundcube__des_key
#
# Encryption key for the users imap password which is stored in the session
# record (and the client cookie if remember password is enabled).
roundcube__des_key: '{{ lookup("password", secret + "/credentials/" + ansible_fqdn + "/roundcube/des_key chars=hexdigits length=24") }}'


# .. envvar:: roundcube__local_config_map
#
# Custom configuration values for the Roundcube config.inc.php
roundcube__local_config_map: {}


# .. envvar:: roundcube__group_local_config_map
#
# Custom configuration values which can be defined on a group level and
# eventually are merged with :envvar:`roundcube__local_config_map`
roundcube__group_local_config_map: {}


# .. envvar:: roundcube__host_local_config_map
#
# Custom configuration values which can be defined ona host level and
# eventually are merged with :envvar:`roundcube__local_config_map`
roundcube__host_local_config_map: {}


# .. envvar:: roundcube__default_plugins
#
# List of plugins shipped and enabled by default with Roundcube
roundcube__default_plugins: [ 'archive', 'filesystem_attachments', 'jqueryui', 'zipdownload' ]


# .. envvar:: roundcube__plugins
#
# Additional Roundcube plugins to enable. Check the :file:`plugins/` folder for
# the plugins shipped by default
roundcube__plugins: []


# -------------------
#   Other variables
# -------------------

# .. envvar:: roundcube__max_file_size
#
# Maximum upload size, in MB
roundcube__max_file_size: '30'


# .. envvar:: roundcube__extra_packages
#
# List of additional Debian packages (e.â€¯g. language dictionaries) that should
# be installed with Roundcube
roundcube__extra_packages: []


# .. Role-dependent configuration [[[1
#
# --------------------------------
#   Role-dependent configuration
# --------------------------------

# .. envvar:: roundcube__nginx_server
#
# :program:`nginx` server configuration managed by the debops.nginx_ role.
roundcube__nginx_server:
  by_role: 'ansible-roundcube'
  enabled: True
  type: 'php5'
  name: '{{ roundcube__domain }}'
  root: '{{ roundcube__git_checkout }}'
  access_policy: '{{ roundcube__nginx_access_policy }}'
  index: 'index.php'

  options: |
    autoindex off;
    client_max_body_size {{ roundcube__max_file_size }}M;
    client_body_buffer_size 128k;

  location:
    '/': |
      try_files $uri $uri/ @roundcube;

    '@roundcube': |
      rewrite ^/favicon\.ico$       skins/larry/images/favicon.ico    last;

    '~ ^/?(installer|[A-Z0-9]+$)': |
      deny all;

    '~ ^/?(\.git|\.tx|SQL|bin|config|logs|temp|tests|program\/(include|lib|localization|steps))': |
      deny all;

    '~ /(README\.md|composer\.json-dist|composer\.json|package\.xml|Dockerfile)$': |
      deny all;

  php5: 'php5_roundcube'
  php5_options: |
    fastcgi_intercept_errors        on;
    fastcgi_ignore_client_abort     off;
    fastcgi_connect_timeout         60;
    fastcgi_send_timeout            180;
    fastcgi_read_timeout            180;
    fastcgi_buffer_size             128k;
    fastcgi_buffers               4 256k;
    fastcgi_busy_buffers_size       256k;
    fastcgi_temp_file_write_size    256k;


# .. envvar:: roundcube__nginx_access_policy
#
# Name of the "nginx access policy" for Roundcube webpage. See debops.nginx_
# Ansible role for more details.
roundcube__nginx_access_policy: ''


# .. envvar:: roundcube__nginx_upstream_php5
#
# PHP upstream server configuration managed by the debops.nginx_ role.
roundcube__nginx_upstream_php5:
  enabled: True
  name: 'php5_roundcube'
  type: 'php5'
  php5: 'roundcube'


# .. envvar:: roundcube__php5_packages
#
# List of PHP5 packages required by Roundcube.
roundcube__php5_packages: [ 'php-auth-sasl', 'php5-gd', 'php5-intl', 'php5-json',
                           'php5-mcrypt', 'php-mail-mime', 'php-mail-mimedecode',
                           'php-net-smtp', 'php-net-socket', 'php-pear' ]


# .. envvar:: roundcube__php5_pool
#
# PHP pool managed by the `debops.php5 <https://github.com/debops/ansible-php5>`_
# role.
roundcube__php5_pool:
  enabled: True
  name: 'roundcube'
  user: '{{ roundcube__user }}'
  group: '{{ roundcube__group }}'

  php_admin_value:
    display_errors:             'off'
    log_errors:                 'on'
    error_log:                  'logs/errors'
    upload_max_filesize:        '{{ roundcube__max_file_size }}M'
    post_max_size:              '{{ roundcube__max_file_size }}M'
    memory_limit:               '64M'
    register_globals:           'off'
    zlib.output_compression:    'off'
    magic_quotes_gpc:           'off'
    magic_quites_runtime:       'off'
    suhosin.session.encrypt:    'off'
    session.auto_start:         'off'
    session.gc_maxlifetime:     '21600'
    session.gc_divisor:         '500'
    session.gc_probability:     '1'
