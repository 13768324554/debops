---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# Default variables
# =================

# .. contents:: Sections
#    :local:

# .. MariaDB server configuration [[[1
#
# --------------------------------
#   MariaDB server configuration
# --------------------------------

# .. envvar:: mariadb__server
#
# FQDN hostname of the MariaDB server. If a local MariaDB server is detected, it
# will override this variable automatically. Only one server at a time is
# currently supported per host.
mariadb__server: ''


# .. envvar:: mariadb__port
#
# Port number on which to connect to the server. You usually don't need to
# change this.
mariadb__port: '3306'


# .. envvar:: mariadb__client
#
# When the database server is used remotely, this variable defines the "host"
# part of the client username. If a local MariaDB server is detected, this
# variable will be automatically changed to ``localhost``.
mariadb__client: '{{ ansible_fqdn }}'


# .. envvar:: mariadb__delegate_to
#
# When the MariaDB server is used remotely, Ansible needs to run tasks on the
# correct host. This variable controls the task delegation to the correct
# database server.
#
# If the MariaDB server is run locally, this should point to the FQDN hostname of
# the current host, NOT ``localhost`` because that would delegate the tasks to
# the Ansible Controller.
mariadb__delegate_to: '{{ mariadb__server
                          if (mariadb__server|d() and
                              mariadb__server != "localhost")
                          else ansible_fqdn }}'


# .. MariaDB APT packages [[[1
#
# ------------------------
#   MariaDB APT packages
# ------------------------

# .. envvar:: mariadb__flavor
#
# Variable which defines what database engine to use:
#
# - ``mariadb``: default, use MariaDB engine from Debian repository
#
# - ``mariadb_upstream``: use MariaDB engine from upstream repository
#
# - ``mysql``: use MySQL engine from Debian repository
#
# - ``percona``: use Percona XtraDB engine from upstream repository
#
# The choice depends on availability of MariaDB packages in a distribution.
# Percona needs to be selected explicitly.
mariadb__flavor: '{{ (ansible_local.mariadb.flavor
                      if (ansible_local|d() and ansible_local.mariadb|d() and
                          ansible_local.mariadb.flavor|d())
                      else (mariadb__flavor_map[ansible_distribution_release] | default("mariadb"))) }}'


# .. envvar:: mariadb__flavor_map
#
# List of Linux distributions where the default MariaDB packages are not
# available and MySQL should be used instead.
mariadb__flavor_map:
  'wheezy': 'mysql'
  'precise': 'mysql'


# .. envvar:: mariadb__upstream_key
#
# APT GPG key fingerprint used to sign the upstream MariaDB packages.
mariadb__upstream_key: '199369E5404BD5FC7D2FE43BCBCB082A1BB943DB'


# .. envvar:: mariadb__upstream_version
#
# Version of the MariaDB upstream.
mariadb__upstream_version: '10.1'


# .. envvar:: mariadb__upstream_mirror
#
# URL of the MariaDB upstream mirror.
mariadb__upstream_mirror: 'http://nyc2.mirrors.digitalocean.com/mariadb/repo/{{ mariadb__upstream_version }}/{{ ansible_distribution | lower }}'


# .. envvar:: mariadb__upstream_repository
#
# Address of the MariaDB upstream APT repository.
mariadb__upstream_repository: 'deb {{ mariadb__upstream_mirror }} {{ ansible_distribution_release }} main'


# .. envvar:: mariadb__base_packages
#
# List of APT packages that should be installed with any database engine
# selected.
mariadb__base_packages: [ 'python-mysqldb' ]


# .. envvar:: mariadb__packages
#
# List of additional packages to install with the database client.
mariadb__packages: []


# .. envvar:: mariadb__packages_map
#
# Dictionary with list of packages that will be installed with a particular
# database engine.
mariadb__packages_map:
  'mariadb': [ 'mariadb-client' ]
  'mariadb_upstream': [ 'mariadb-client' ]
  'mysql': [ 'mysql-client' ]
  'percona': [ 'percona-server-client' ]


# .. MariaDB client system-wide configuration [[[1
#
# --------------------------------------------
#   MariaDB client system-wide configuration
# --------------------------------------------
#
# .. envvar:: mariadb__client_options
#
# Dict with additional MariaDB client options set system-wide, option names as
# keys and their values as values, added to ``/etc/mysql/conf.d/client.cnf``.
# Options without specific values should be defined with empty values.
mariadb__client_options: {}


# .. User account privileges [[[1
#
# ---------------------------
#   User account privileges
# ---------------------------

# .. envvar:: mariadb__default_privileges
#
# Should ``debops.mariadb`` automatically grant all privileges to a database
# named the same as the username for a given user account? This is equivalent
# to::
#
#     GRANT ALL PRIVILEGES ON `<user>`.* TO `<user>`@`<host>`;
#
mariadb__default_privileges: True


# .. envvar:: mariadb__default_privileges_aux
#
# Should ``debops.mariadb`` automatically grant all privileges to databases
# with the same prefix as the username for a given user account? This is
# equivalent to::
#
#     GRANT ALL PRIVILEGES ON `<user>\_%`.* TO `<user>`@`<host>`;
#
mariadb__default_privileges_aux: True


# .. envvar:: mariadb__default_privileges_grant
#
# Default privileges granted automatically. See Ansible ``mysql_user`` module
# for list and format of privileges.
mariadb__default_privileges_grant: 'ALL'


# .. Databases, user accounts [[[1
#
# ----------------------------
#   Databases, user accounts
# ----------------------------

# .. envvar:: mariadb__password_length
#
# Length of automatically generated user accounts, saved in the ``secret/``
# directory. See ``debops.secret`` role for more details about passwords.
mariadb__password_length: '48'


# .. envvar:: mariadb__databases
#
# List of databases configured on the MariaDB server. See
# :ref:`mariadb__databases` for more details.
mariadb__databases: []


# .. envvar:: mariadb__users
#
# List of user accounts configured on the MariaDB server. See
# :ref:`mariadb__users` for more details.
mariadb__users: []

