---

# ---- Basic options ----

# Should GitLab role manage it's own dependencies (database, web server)?
gitlab_dependencies: True

# What version of GitLab to install / manage
gitlab_version: '7.12'


# ---- GitLab instance configuration ----

# What database to use for GitLab instnce? Choices: mysql, postgresql
# Currently only MySQl is supported
gitlab_database: 'mysql'

# Domain which will be used for nginx server and gitlab-shell access
# GitLab will be configured with HTTPS enabled by default
gitlab_domain: [ 'code.{{ ansible_domain }}' ]

# Webserver authentication realm
gitlab_nginx_auth_realm: 'GitLab access is restricted'

# Name of webserver access policy to enable (see 'debops.nginx' role)
gitlab_nginx_access_policy: ''

# E-mail sender name used by GitLab
gitlab_email_display_name: 'GitLab'

# E-mail address used by GitLab
gitlab_email_from: 'git@{{ gitlab_domain[0] }}'

# E-mail Reply-To address added to GitLab mails
gitlab_email_reply_to: 'admin+gitlab@{{ ansible_domain }}'

# Default admin account options
gitlab_admin_email: 'admin@{{ ansible_domain }}'
gitlab_admin_password: '{{ lookup("password", secret + "/credentials/" + ansible_fqdn + "/gitlab/admin/password chars=ascii,numbers") }}'


# ---- New user configuration ----

# Should new users be able to create groups?
gitlab_default_can_create_group: 'true'

# Can users change their own username?
gitlab_username_changing_enabled: 'false'

# Default GitLab theme to use
gitlab_default_theme: '2'


# ---- Backup configuration ----

# Backup frequency (daily, weekly, monthly)
gitlab_backup_frequency: 'daily'

# How long to store backups for, in seconds
gitlab_backup_keep_time: '{{ (60 * 60 * 24 * 7) }}'


# ---- Custom redis configuration ----

# Connection string used in the configuration file
gitlab_redis: 'redis://{{ gitlab_redis_host + ":" + gitlab_redis_port }}'

# Define hostname of redis server to use
gitlab_redis_host: 'localhost'

# Define port of redis server to use
gitlab_redis_port: '6379'


# ---- GitLab directory layout ----

# Home directory
gitlab_home: '{{ ansible_local.root.home + "/" + gitlab_user }}'

# Application installation directory
gitlab_app_root_path: '{{ ansible_local.root.app + "/" + gitlab_user }}'

# GitLab repositories
gitlab_repositories_path: '{{ ansible_local.root.data + "/gitlab/repositories" }}'

# GitLab satellites
gitlab_satellites_path: '{{ ansible_local.root.data + "/gitlab/satellites" }}'

# Backup path
gitlab_backup_path: '{{ ansible_local.root.backup + "/gitlab" }}'

# GitLab sources root path
gitlab_src_path: '{{ ansible_local.root.src + "/gitlab" }}'


# ---- Internal application settings ----

# System user, group and home directory
gitlab_user: 'git'
gitlab_group: 'git'

# List of additional system groups to add to the GitLab user account
# 'sshusers' is used in DebOps to limit sshd access. See 'debops.auth' role
gitlab_user_append_groups: [ 'sshusers' ]

# Server timezone
gitlab_time_zone: 'UTC'

# Connection type for PostgreSQL database (choices: socket, port)
gitlab_postgresql_database_connection: 'socket'

# nginx client_max_body_size value
gitlab_nginx_client_max_body_size: '5m'

# nginx - gitlab proxy timeout in seconds
gitlab_nginx_proxy_timeout: '300'

# Max git upload size in bytes
gitlab_git_max_size: '{{ (1024 * 1024 * 20) }}'

# git connection timeout in seconds
gitlab_git_timeout: '10'

# Unicorn port on localhost interface for GitLab
gitlab_unicorn_port: '18082'

# unicorn connection timeout in seconds
gitlab_unicorn_timeout: '60'

# Additional options for Phusion Passenger in a text block format
gitlab_passenger_options: ''


# ---- Compatibility workarounds ----

# Enable or disable ACL configuration for the webserver
gitlab_support_filesystem_acl: True

# ---- GitLab Ldap Authentication configuration ----

gitlab_ldap_enable: false
gitlab_ldap_domain: '{{ ansible_domain }}'
gitlab_ldap_label: '{{ gitlab_ldap_domain }}'
gitlab_ldap_basedn: '{{ "dc=" + gitlab_ldap_domain.split(".") | join(",dc=") }}'
gitlab_ldap_binddn: '{{ "cn=admin," + gitlab_ldap_basedn }}'
gitlab_ldap_uid: 'uid'
gitlab_ldap_host: 'ldap.{{ ansible_domain }}'
gitlab_ldap_binddn_password: '{{ secret + "/credentials/" + gitlab_ldap_host + "/slapd/" + gitlab_ldap_basedn + "/" + gitlab_ldap_binddn + ".password" }}'
gitlab_ldap_password: '{{ lookup("password", gitlab_ldap_binddn_password) }}'
gitlab_ldap_port: '389'
gitlab_ldap_method: 'tls'
gitlab_ldap_activedirectory: false
