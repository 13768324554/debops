---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker
#
# Default variables
# =================

# .. contents:: Sections
#    :local:
#
# .. include:: includes/all.rst

# Role configuration [[[
# ------------------

# .. envvar:: resources__enabled
#
# Enable or disable management of custom resources.
resources__enabled: True


# .. envvar:: resources__src
#
# Absolute path to the directory on Ansible Controller where custom resources
# can be found. You need to create this directory manually.
#
# By default, path is relative to the Ansible inventory.
resources__src: '{{ inventory_dir | realpath + "/../resources/" }}'

# .. ]]]

# Manage custom paths [[[
# -------------------

# These lists allow you to manage file and directory paths on remote hosts
# using `Ansible file module`_. By default role treats specified paths as
# directory names which should be present on the remote host. You can use all
# parameters supported by the `Ansible file module`_.
#
# See :ref:`resources__ref_paths` for more details.

# .. envvar:: resources__paths
#
# Paths managed on all hosts in Ansible inventory.
resources__paths: []


# .. envvar:: resources__group_paths
#
# Paths managed on hosts in a specific group in Ansible inventory.
resources__group_paths: []


# .. envvar:: resources__host_paths
#
# Paths managed on specific hosts in Ansible inventory.
resources__host_paths: []

# .. ]]]

# Manage custom remote resources [[[
# ------------------------------

# These lists allow you to specify remote resources to download to the hosts
# using the `Ansible get_url module`. You can download files over HTTP, HTTPS,
# FTP and use all options supported by this module.
#
# See :ref:`resources__ref_urls` for more details.

# .. envvar:: resources__urls
#
# Manage online resources on all hosts in Ansible inventory.
resources__urls: []


# .. envvar:: resources__group_urls
#
# Manage online resources on hosts in a specific group in Ansible inventory.
resources__group_urls: []


# .. envvar:: resources__host_urls
#
# Manage online resources on specific hosts in Ansible inventory.
resources__host_urls: []

# .. ]]]

# Manage custom archives [[[
# ----------------------

# These lists allow you to unpack archives stored on Ansible Controller to
# remote hosts using the `Ansible unarchive module`_. You can use all of the
# parameters supported by this module.
#
# See :ref:`resources__ref_archives` for more details.

# .. envvar:: resources__archives
#
# Manage archives on all hosts in Ansible inventory.
resources__archives: []


# .. envvar:: resources__group_archives
#
# Manage archives on hosts in specific group in Ansible inventory.
resources__group_archives: []


# .. envvar:: resources__host_archives
#
# Manage archives on specific hosts in Ansible inventory.
resources__host_archives: []

# .. ]]]

# Manage custom files [[[
# -------------------

# These lists allow you to manage file contents on remote hosts, either by
# copying files from Ansible Controller, or providing the contents directly in
# Ansible inventory. You can use all parameters supported by the `Ansible copy
# module`_.
#
# See :ref:`resources__ref_files` for more details.

# .. envvar:: resources__files
#
# Manage file contents on all hosts in Ansible inventory.
resources__files: []


# .. envvar:: resources__group_files
#
# Manage file contents on hosts in a specific group in Ansible inventory.
resources__group_files: []


# .. envvar:: resources__host_files
#
# Manage file contents on specific hosts in Ansible inventory.
resources__host_files: []


# Manage custom delayed paths [[[
# -------------------------------

# These lists allow you to manage file and directory paths on remote hosts
# using the `Ansible file module`_.
# The lists can be used exactly the same as
# :regexp:`resources__(?:group_|host_)?paths` from the `Manage custom paths`_ section.
# The only difference is that the custom delayed paths are handled after all
# non delayed resources.
# This allows to create symbolic links to files provided by
# :regexp:`resources__(?:group_|host_)?files` for example.
#
# See :ref:`resources__ref_paths` for more details.

# .. envvar:: resources__delayed_paths
#
# Paths managed on all hosts in Ansible inventory.
resources__delayed_paths: []


# .. envvar:: resources__group_delayed_paths
#
# Paths managed on hosts in a specific group in Ansible inventory.
resources__group_delayed_paths: []


# .. envvar:: resources__host_delayed_paths
#
# Paths managed on specific hosts in Ansible inventory.
resources__host_delayed_paths: []

# .. ]]]

